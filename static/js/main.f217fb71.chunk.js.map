{"version":3,"sources":["StateAPI/ActionType.ts","StateAPI/RootReducer.ts","StateAPI/index.ts","_app/useWindowDimension.tsx","UIElements/Navbar/Subitem.tsx","UIElements/Navbar/Navbar.tsx","UIElements/SlidingMenu/MenuIcon.tsx","UIElements/SlidingMenu/Drawer.tsx","UIElements/SlidingMenu/SlidingMenu.tsx","UIElements/HeaderProfile/HeaderProfile.tsx","UIElements/FancyButton/FancyButton.tsx","UIElements/Columns/Columns.tsx","UIElements/BasicCard/BasicCard.tsx","UIElements/LinedStyled/LinedStyled.tsx","UIElements/ModalBox/ModalBox.tsx","UIElements/ModalBox/scrolling.ts","LayoutViews/HomeLayout.tsx","AppComponents/shared/NavigationBar.tsx","AppComponents/HomeScene.tsx","LayoutViews/ProjectLayout.tsx","AppComponents/ProjectScene.tsx","App.tsx","StateAPI/State.ts","index.tsx"],"names":["ActionType","RootReducer","state","action","type","test","alert","console","error","contextStore","React","createContext","getWindowDimensions","window","width","innerWidth","height","innerHeight","isMobile","isTablet","isDesktop","useWindowDimensions","useState","windowDimensions","setWindowDimensions","useEffect","handleResize","addEventListener","removeEventListener","Subitem","props","item","subitem","className","name","map","i","onClick","callback","index","icon","active","disabled","Navbar","id","brandIconPath","src","alt","items","MenuIcon","isCrossed","onMenuIconPress","Drawer","isVisible","length","SubItem","cb","n","SlidingMenu","drawerOpen","setDrawerOpen","cross","setCross","HeaderProfile","containerClass","isHorizontal","imagepath","imagesize","style","title","alias","options","strings","cursor","autoStart","loop","delay","deleteSpeed","pauseFor","text","btnaction","btnactioncallback","FancyButton","e","stopPropagation","Columns","enableMagicShow","fade","columnClassName","columnCount","isSingleVertical","columns","BasicCard","image","tags","btn","onpress","LinedStyled","ModalBox","Fragment","ModalBoxContents","ref","useRef","current","opacity","x","scrollX","y","scrollY","onscroll","scrollTo","document","body","overflow","stopScroll","onClose","content","onCloseText","HomeLayout","useDimension","introduction","skills","projects","project","description","btntext","projectOnAction","footerText","isModalVisible","onModalClose","reachme","link","href","note","NavigationBar","history","useHistory","navitems","location","endsWith","handleNavigation","push","position","top","left","HomeScene","modalVisible","setModalVisible","porfolioinfo","introtext","profile","itemname","open","ProjectLayout","ProjectScene","projectlist","App","useReducer","dispatch","Provider","value","path","exact","component","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.f217fb71.chunk.js","sourcesContent":["/*\r\n    Defines the available action type\r\n*/\r\n\r\n/**\r\n * The list of available action that will be use by the RootReducer and Actions functions\r\n */\r\nexport enum ActionType {\r\n    test,\r\n    \r\n}\r\n","/*\r\n    The root reducer.\r\n    This function is should only use be used by App.jsx since the App.js set up the context api\r\n*/\r\nimport { ActionType } from \"./ActionType\";\r\nimport { ActionInterface } from \"./Interface\";\r\nimport { State } from './State';\r\n\r\n/**\r\n * The reducer (Google about Flow design pattern for info). \r\n * This function is indirectly called by the use of dispatch(ActionInterface)\r\n*/\r\nexport function RootReducer(state :State, action :ActionInterface) :State {\r\n    switch( action.type ) {\r\n        case ActionType.test:\r\n            alert(\"Wow! The StateAPI (context api / redux) is WORKING!\");\r\n            return state;\r\n\r\n        default:\r\n            console.error(\"The Action was not provided in the RootReducer\");\r\n            return state;\r\n    }\r\n}\r\n","/*\r\n    Contains all of the state api functionality so there is no need to \r\n    import each one by one\r\n*/\r\nimport React from 'react';\r\nimport { StateAPI } from './Interface';\r\nexport type { StateAPI } from './Interface';\r\nexport { createDefaultState } from './State';\r\nexport { Action } from './Actions';\r\n\r\n//this reducer is called only by the main app\r\nexport { RootReducer } from './RootReducer';\r\n\r\n/**\r\n * Contains a context (store). Google about Flow Design Pattern for more info.\r\n */\r\n//@ts-ignore - ignore the passed null vale since the context store does not have default value\r\nexport const contextStore = React.createContext<StateAPI>(null);\r\n","import { useState, useEffect } from 'react';\r\n\r\nfunction getWindowDimensions() {\r\n  const { innerWidth: width, innerHeight: height } = window;\r\n\r\n  return {\r\n    width,\r\n    height,\r\n    isMobile:   width >= 578 ? false : true,\r\n    isTablet:   width >= 756 ? false : true,\r\n    isDesktop:  width >= 981 ? true  : false\r\n  };\r\n}\r\n\r\n/**\r\n * A hooks that return the current screen dimension\r\n * @returns \r\n *  width     :number,\r\n    height    :number,\r\n    isMobile  :boolean\r\n    isDesktop :boolean\r\n */\r\nexport default function useWindowDimensions() {\r\n  const [windowDimensions, setWindowDimensions] = useState(getWindowDimensions());\r\n\r\n  useEffect(() => {\r\n    function handleResize() {\r\n      setWindowDimensions(getWindowDimensions());\r\n    }\r\n\r\n    window.addEventListener('resize', handleResize);\r\n    return () => window.removeEventListener('resize', handleResize);\r\n  }, []);\r\n\r\n  return windowDimensions;\r\n}\r\n","/*\r\n    A resuable (not app specific component) navbar.\r\n    The parent element should provide the position: fixed style.                 \r\n*/\r\nimport './Navbar.scss';\r\nimport { NavItem } from '../_lib/NavItem';\r\n\r\ninterface propsReceive {\r\n    item        :NavItem;\r\n    index       :number;\r\n    callback    :(index :number, itemname :string) => void;  \r\n}\r\n\r\nexport default function Subitem(props :propsReceive) {\r\n    if(props.item.subitem) \r\n        return (\r\n            <span key={props.index} className='item'>\r\n            { props.item.name }\r\n                <div className='dropdown'>\r\n                    <div className='invisiblebar'></div>\r\n                    {\r\n                        props.item.subitem.map((subitem :any, i :number) => {\r\n                            return (\r\n                                <div key={i}\r\n                                    onClick={()=> props.callback(props.index, subitem.name)}\r\n                                    className='subitem'\r\n                                >\r\n                                     <span className='icon'>\r\n                                        { subitem.icon && subitem.icon() }\r\n                                    </span>\r\n                                    <span>\r\n                                        { subitem.name }\r\n                                    </span>\r\n                                </div>\r\n                            )\r\n                        })\r\n                    }\r\n                </div>\r\n            </span>\r\n        );\r\n    else\r\n        return (\r\n            <span key={props.index}\r\n                className={props.item.active ? 'active' : props.item.disabled ? 'disabled' : 'item'}\r\n                onClick={() => {\r\n                    if( !props.item.active && !props.item.disabled )\r\n                        props.callback(props.index, props.item.name);\r\n                }}>\r\n                 <span className='icon'>\r\n                    { props.item.icon && props.item.icon() }\r\n                </span>\r\n                <span>\r\n                    { props.item.name }\r\n                </span>\r\n            </span>\r\n        );\r\n}\r\n","/*\r\n    A resuable (not app specific component) navbar.\r\n    The parent element should provide the position: fixed style.\r\n\r\n    <Navbar\r\n        brandIconPath={'./assets/test.png'}\r\n        items={[\r\n            {\r\n                name: 'item1',\r\n                icon: () => <FaBeer />\r\n            },\r\n            {\r\n                name: 'item2',\r\n                subitem: [\r\n                    {\r\n                        name: 'sub 1',\r\n                        icon: () => <FaBeer />\r\n                    },\r\n                    {\r\n                        name: 'sub 2',\r\n                        icon: () => <FaBeer />\r\n                    }\r\n                ]\r\n            }\r\n        ]}\r\n        callback={(i :number, name :string) => console.log('you pressed :' + name)}\r\n    />             \r\n*/\r\nimport './Navbar.scss';\r\nimport { NavigationUIProps, NavItem } from '../_lib/NavItem';\r\nimport Subitem from './Subitem';\r\n\r\n/**\r\n * The navbar position by default is static.\r\n * The parent element should provide the positioning such as fixed.\r\n * \r\n * @props brandIconPath? :string;\r\n * @props callback       :(index :number, itemname :string) => void;\r\n * @props items          :[\r\n *  name: string, icon? :JSX.Element, active? :boolean, disabled? :boolean;\r\n *  subitem?: { name :string, icon?: JSX.Element, active? :boolean, disabled? :boolean }\r\n * ]\r\n * \r\n * @example\r\n * import { FaBeer } from 'react-icons/fa';\r\n    .....\r\n        <Navbar\r\n            items={[\r\n                {\r\n                    name: 'item1',\r\n                    icon: () => <FaBeer />\r\n                },\r\n                {\r\n                    name: 'item2',\r\n                    subitem: [\r\n                        {\r\n                            name: 'sub 1',\r\n                            icon: () => <FaBeer />,\r\n                            active: true\r\n                        },\r\n                        {\r\n                            name: 'sub 2',\r\n                            icon: () => <FaBeer />\r\n                        }\r\n                    ]\r\n                }\r\n            ]}\r\n            callback={(i :number, name :string) => console.log('you pressed :' + name)}\r\n        />\r\n */\r\nexport function Navbar(props :NavigationUIProps) {\r\n    return (\r\n        <div id='PongDesignNavbar'>\r\n            { props.brandIconPath && <img className='img' src={props.brandIconPath} alt={props.brandIconPath}/> }\r\n            <span className='navitemscontainer'>\r\n            { props.items && props.items.map( (item :NavItem,  index :number) => {\r\n                return <Subitem\r\n                    key={index}\r\n                    item={item}\r\n                    index={index}\r\n                    callback={props.callback}\r\n                />\r\n            })}\r\n            </span>\r\n        </div>\r\n    );\r\n}\r\n","/*\r\n    Return an hambuger icon thru the use of stylesheet (no vector icon)\r\n*/\r\nimport React from 'react';\r\nimport './MenuIcon.scss';\r\n\r\ninterface propsReceive {\r\n    isCrossed :boolean;\r\n    onMenuIconPress?: (isCrossed :boolean) => void;\r\n}\r\n\r\nexport default function MenuIcon(props :propsReceive) {\r\n    function handleIconPressed() {\r\n        props.onMenuIconPress && props.onMenuIconPress(!props.isCrossed);\r\n    }\r\n\r\n    return (\r\n        <div id='menuicon' className={props.isCrossed ? 'change' : ''} onClick={handleIconPressed} >\r\n            <div className=\"bar1 change\"></div>\r\n            <div className=\"bar2\"></div>\r\n            <div className=\"bar3\"></div>\r\n        </div>\r\n    );\r\n}\r\n","/*\r\n*/\r\nimport React from 'react';\r\nimport './Drawer.scss';\r\n\r\nimport { NavItem, NavNameAndIcon } from '../_lib/NavItem';\r\n\r\ninterface propsReceive {\r\n    items?      :Array<NavItem>;\r\n    isVisible   :boolean;\r\n    callback    :(index :number, itemname :string) => void;   \r\n}\r\n\r\nexport default function Drawer(props :propsReceive) {\r\n    return (\r\n        <div id='PongDesignSlidingMenuDrawer' className={props.isVisible ? 'visible' : 'hidden'}>\r\n            {\r\n                props.items?.map((item :NavItem, index :number) => {\r\n                    return (\r\n                        <div key={index}\r\n                            className={item.active ? 'active' : item.disabled ? 'disabled' : 'item'}\r\n                            onClick={() => {\r\n                                if(item.active || item.disabled)\r\n                                    return;\r\n                                if(!item.subitem || item.subitem.length <= 0 )\r\n                                    props.callback(index, item.name)\r\n                            }}\r\n                        >\r\n                            <span className='icon'>\r\n                                { item.icon && item.icon() }\r\n                            </span>\r\n                            <span>\r\n                                { item.name }\r\n                            </span>\r\n                            <SubItem\r\n                                item={item}\r\n                                index={index}\r\n                                cb={(n :string) =>{\r\n                                    props.callback(index, n)\r\n                                }}\r\n                            />\r\n                        </div>\r\n                    )\r\n                })\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction SubItem( props :{item :NavItem, index :number, cb: (name :string) => void}) {\r\n    if(!props.item.subitem || props.item.subitem.length <= 0 )\r\n        return <span></span>\r\n\r\n    return (\r\n        <div className='subitemcontainer'>\r\n            {props.item.subitem.map((subitem :NavNameAndIcon, index :number) => {\r\n                return (\r\n                    <div\r\n                        key={index}\r\n                        onClick={() => props.cb(subitem.name)}\r\n                    >\r\n                        <span className='icon'>\r\n                                { subitem.icon && subitem.icon() }\r\n                            </span>\r\n                            <span>\r\n                                { subitem.name }\r\n                            </span>\r\n                    </div>\r\n                );\r\n            })}\r\n        </div>\r\n    );\r\n}\r\n","/*\r\n    Return a navbar with hamburger icon and drawer\r\n*/\r\nimport React from 'react';\r\nimport './SlidingMenu.scss';\r\n\r\nimport { NavigationUIProps } from '../_lib/NavItem';\r\nimport MenuIcon from './MenuIcon';\r\nimport Drawer from './Drawer';\r\n\r\n/**\r\n * Returns a Sliding Menu (Drawer) which includes a nav bar. The navbar position by default is static.\r\n * The parent element should provide the positioning such as fixed.\r\n * \r\n * @props brandIconPath? :string;\r\n * @props callback       :(index :number, itemname :string) => void;\r\n * @props items          :[\r\n *  name: string, icon? :JSX.Element, active? :boolean, disabled? :boolean;\r\n *  subitem?: { name :string, icon?: JSX.Element, active? :boolean, disabled? :boolean }\r\n * ]\r\n * \r\n * @example\r\n * import { FaBeer } from 'react-icons/fa';\r\n    .....\r\n        <SlidingMenu\r\n            items={[\r\n                {\r\n                    name: 'item1',\r\n                    icon: () => <FaBeer />\r\n                },\r\n                {\r\n                    name: 'item2',\r\n                    subitem: [\r\n                        {\r\n                            name: 'sub 1',\r\n                            icon: () => <FaBeer />,\r\n                            active: true\r\n                        },\r\n                        {\r\n                            name: 'sub 2',\r\n                            icon: () => <FaBeer />\r\n                        }\r\n                    ]\r\n                }\r\n            ]}\r\n            callback={(i :number, name :string) => console.log('you pressed :' + name)}\r\n        />\r\n */\r\nexport function SlidingMenu(props :NavigationUIProps) {\r\n    const [drawerOpen, setDrawerOpen] = React.useState(false);\r\n    const [cross, setCross]           = React.useState(false);\r\n\r\n    function handleMenuIconPress(isCrossed :boolean) {\r\n        setDrawerOpen(isCrossed);\r\n        setCross(isCrossed);\r\n    }\r\n\r\n    function handleNavItemPressed(index :number, name :string) {\r\n        setDrawerOpen(!drawerOpen);\r\n        setCross(false);\r\n        props.callback(index, name);\r\n    }\r\n\r\n    return (\r\n        <div id='PongDesignSlidingMenu'>\r\n            <span className='nav'>\r\n                <MenuIcon\r\n                    onMenuIconPress={handleMenuIconPress}\r\n                    isCrossed={cross}\r\n                />\r\n                {\r\n                    props.brandIconPath &&\r\n                    <img className='img' src={props.brandIconPath} alt={props.brandIconPath}/>\r\n                }\r\n            </span>\r\n            <div>\r\n                <Drawer\r\n                    isVisible={drawerOpen}\r\n                    items={props.items}\r\n                    callback={handleNavItemPressed}\r\n                />\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n","/*\r\n*/\r\nimport './HeaderProfile.scss';\r\n\r\nimport Typewriter from 'typewriter-effect';\r\n\r\nimport { HeaderProfileInterface } from  '../_lib/HeaderProfile';\r\nimport { FancyButton } from '../';\r\n\r\n/**\r\n * Card used for noticable information such as Profile home page  \r\n * @example\r\n * imagepath?       :string;\r\n * imagesize?       :[string | number, string | number]\r\n    title?          :string;\r\n    alias?          :string;\r\n    text?           :string;\r\n    isHorizontal?   :boolean;\r\n    btnaction?      :Array<string>;\r\n    btnactioncallback? :(index :number, itemname :string) => void;\r\n */\r\nexport function HeaderProfile(props :HeaderProfileInterface) {\r\n    const containerClass :string = props.isHorizontal ? 'horizontal' : 'vertical';\r\n    return (\r\n        <div id='PongDesignDescriptiveCard' className={containerClass}>\r\n                { props.imagepath &&\r\n                    <div className='imagecontainer'>\r\n                        { props.imagesize ?\r\n                            <img src={props.imagepath} alt={props.imagepath}\r\n                                style={{width: props.imagesize[0], height: props.imagesize[1]}}/>\r\n                            :\r\n                            <img src={props.imagepath} alt={props.imagepath} />\r\n                        }\r\n                    </div>\r\n                }\r\n                <div className='text'>\r\n                    <h1>{props.title}</h1>\r\n                    <h3>\r\n                    { props.alias &&\r\n                        <Typewriter\r\n                            options={{\r\n                                strings: props.alias,\r\n                                cursor: '',\r\n                                autoStart: true,\r\n                                loop: true,\r\n                                delay: 30,\r\n                                deleteSpeed: 30,\r\n                                //@ts-ignore\r\n                                pauseFor: 2000,\r\n                            }}\r\n                        />\r\n                    }\r\n                    </h3>\r\n                    <p>{props.text}</p>\r\n\r\n                    { props.btnaction && props.btnactioncallback &&\r\n                    <div id='calltoactions'> \r\n                        { props.btnaction[0] && \r\n                            <FancyButton name={props.btnaction[0]}\r\n                            //@ts-ignore\r\n                            callback={() => props.btnactioncallback(0, props.btnaction[0])} />\r\n                        }\r\n                        { props.btnaction[1] &&\r\n                            <FancyButton name={props.btnaction[1]}\r\n                            //@ts-ignore\r\n                            callback={() => props.btnactioncallback(1, props.btnaction[1])} />\r\n                        }\r\n                    </div>\r\n                    }\r\n\r\n                </div>\r\n        </div>\r\n    )\r\n}\r\n","import './FancyButton.scss';\r\n\r\n/**\r\n * A button designed with PongDesign theme\r\n * @example\r\n * name \t\t:string;\r\n * callback\t\t:() => void; \r\n */\r\nexport function FancyButton( {name, callback } :{name :string, callback :() => void}) {\r\n\tconst handleClick = (e :any) => {\r\n\t\te.stopPropagation();\r\n\t\tcallback();\r\n\t}\r\n\t\r\n\treturn (\r\n\t\t<button id=\"PongDesignFancyButton\" onClick={ handleClick } >\r\n\t\t\t{name}\r\n\t\t</button>\r\n\t);\r\n}\r\n","import { ColumnsInterface } from '../';\r\nimport './Columns.scss';\r\n\r\n/**\r\n * A column for text and description.\r\n * @example\r\n * columns :Array<{\r\n        title :string;\r\n        text :string;\r\n    }>;\r\n    isHorizontal?   :boolean;\r\n    columnCount?    :1 | 2 | 3 | 4 | 5 | 6; //ignored if isHorizontal is true\r\n */\r\nexport function Columns(props :ColumnsInterface) {\r\n    let enableMagicShow :boolean = props.fade ? true : false;\r\n\r\n    let columnClassName = 'column1';\r\n    if(props.columnCount && !props.isSingleVertical) {\r\n        switch( props.columnCount) {\r\n            case 1: columnClassName = 'column1'; break;\r\n            case 2: columnClassName = 'column2'; break;\r\n            case 3: columnClassName = 'column3'; break;\r\n            case 4: columnClassName = 'column4'; break;\r\n            case 5: columnClassName = 'column5'; break;\r\n            case 6: columnClassName = 'column6'; break;\r\n            default: break;\r\n        }\r\n    }\r\n    else if(props.isSingleVertical)\r\n        columnClassName='singular';\r\n\r\n    return (\r\n        <div id='PongDesignColumns' className={columnClassName}>\r\n            {\r\n                props.columns.map(({title, text}, index :number) => {\r\n                    return (\r\n                        <div key={index} className={enableMagicShow ? 'magic' : ''}>\r\n                            <h3>{title}</h3>\r\n                            <p>{text}</p>\r\n                        </div>\r\n                    );\r\n                })\r\n            }\r\n        </div>\r\n    )\r\n}\r\n","import './BasicCard.scss';\r\n\r\nimport { BasicCardInterface } from '../';\r\n\r\n/**\r\n * Contents of the Basic Card UI Element\r\n * @example\r\n * image?   :string;\r\n    title?   :string;\r\n    text?    :string;\r\n    btn?     :string;\r\n    tags?    :Array<string>;\r\n    onpress? :() => void;\r\n */\r\nexport function BasicCard( props :BasicCardInterface) {\r\n    return (\r\n        <div id='PongDesignBasicCard'>\r\n            { props.image && <img src={props.image} alt={props.image} />}\r\n            <div className=\"information\">\r\n                { props.title && <h3>{props.title}</h3> }\r\n                { props.text  && <p>{props.text}</p> }\r\n                <div className='tags'>\r\n                    { props.tags  && props.tags.map((item :string, i :number) => {\r\n                        return (\r\n                            <span key={i}>{item}</span>\r\n                        )\r\n                    })\r\n                    }\r\n                </div>\r\n            </div>\r\n            { props.btn && <button onClick={props.onpress}>{props.btn}</button> }\r\n        </div>\r\n    )\r\n}\r\n","import './LinedStyled.css';\r\n\r\n/**\r\n * Draw a horizontal with a text in the middle (or just line or text)\r\n * @example\r\n * text?            :string;\r\n * isHorizontal?    :boolean; (Will render line)\r\n */\r\nexport function LinedStyled({text, isHorizontal} :{text? :string, isHorizontal? :boolean}) {\r\n    return (\r\n        <div id='LinedStyled'>\r\n            { isHorizontal && <div className='line'></div> }\r\n            { text && <h3>{text}</h3> }\r\n            { isHorizontal && <div className='line'></div> }\r\n        </div>\r\n    )\r\n}\r\n","/*\r\n*/\r\nimport React, { ReactElement } from 'react';\r\nimport './ModalBox.scss';\r\nimport { enableScroll, stopScroll } from './scrolling';\r\nimport { FancyButton } from '../';\r\n\r\ninterface ModalBoxInterface {\r\n    isVisible      :boolean;\r\n    onClose        :() => void;\r\n    onCloseText    :string;\r\n    title?         :string;\r\n    content        :() => ReactElement<any, any>;\r\n}\r\n\r\n/**\r\n * A modal (alert box) box. This display a fixed position ui that captures <body> to prevent scrolling\r\n * @example\r\n    isVisible      :boolean;\r\n    onClose        :() => void;\r\n    onCloseText    :string;\r\n    title?         :string;\r\n    content        :() => ReactElement<any, any>;\r\n */\r\nexport function ModalBox(props :ModalBoxInterface) {\r\n    return (\r\n        <React.Fragment>\r\n            {\r\n                props.isVisible &&\r\n                <ModalBoxContents\r\n                    { ...props }\r\n                />\r\n            }\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nfunction ModalBoxContents(props :ModalBoxInterface) {\r\n    const ref = React.useRef<any>();\r\n\r\n    React.useEffect( () => {\r\n\t\tref.current.style.opacity = 1;\r\n        stopScroll();\r\n        return () => enableScroll();\r\n\t}, []);\r\n\r\n    return (\r\n        <div id=\"PongDesignModalBox\" >\r\n            <div id=\"content\" ref={ref} >\r\n                <div className='closebtn'>\r\n                    <span className='button' onClick={props.onClose}>X</span>\r\n                    { props.title && <h4>{props.title}</h4> }\r\n                </div>\r\n               { props.content() }\r\n               <div className='btn'>\r\n                    { props.onCloseText && <FancyButton name={props.onCloseText} callback={props.onClose} /> }\r\n               </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n","/*\r\n    Used to stop the body scrolling when something is displayed on the screen\r\n*/\r\n\r\n/**\r\n * Disable the body scrolling\r\n */\r\nexport function stopScroll() {\r\n    var x=window.scrollX;\r\n    var y=window.scrollY;\r\n    window.onscroll=function(){ window.scrollTo(x, y); };\r\n    document.body.style.height = '100%';\r\n    document.body.style.overflow = 'hidden';\r\n}\r\n\r\n/**\r\n * Enable the body scrolling\r\n */\r\nexport function enableScroll() {\r\n    window.onscroll = null;\r\n    document.body.style.height = 'auto';\r\n    document.body.style.overflow = 'auto';\r\n}\r\n","/**\r\n    @TYPE\r\n        Layout - A layout \r\n\r\n    @DESCRIPTION\r\n        Handle and renders appearance of the home page\r\n\r\n    @VISIBLE\r\n        The user is at home page\r\n*/\r\nimport './layout/home.scss';\r\nimport useDimension from '../_app/useWindowDimension';\r\nimport { HomeLayoutInterface } from './_lib/HomeLayoutInterface';\r\nimport {\r\n    HeaderProfile,\r\n    Columns,\r\n    BasicCard,\r\n    LinedStyled,\r\n    ModalBox\r\n} from '../UIElements';\r\n\r\nexport default function HomeLayout( props :HomeLayoutInterface.propsReceive ) {\r\n    const { isMobile } = useDimension();\r\n\r\n    return ( \r\n    <div id='Home'>\r\n        <div id='introduction'>\r\n            <HeaderProfile \r\n                title={props.introduction.title}\r\n                alias={props.introduction.alias}\r\n                text={props.introduction.text}\r\n                imagepath={props.introduction.imagepath}\r\n                isHorizontal={!isMobile}\r\n                btnaction={props.introduction.btnaction}\r\n                btnactioncallback={props.introduction.btnactioncallback}\r\n            />\r\n        </div>\r\n\r\n        <div id='barscolumn'>\r\n            <div className='container'>\r\n                <div className='content'>\r\n                    <h3>Skills</h3>\r\n                    <Columns \r\n                        columns={props.skills}\r\n                        isSingleVertical={isMobile}\r\n                        columnCount={2}\r\n                        fade={false}\r\n                    />\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n        <div id='projects'>\r\n            <LinedStyled\r\n                text='Projects Highlight'\r\n                isHorizontal={!isMobile}\r\n            />\r\n            <div className='projects-item'>\r\n            { props.projects.map((project :HomeLayoutInterface.Cards, index :number) => {\r\n                return (\r\n                    <div key={index}>\r\n                        <BasicCard\r\n                            image={project.image}\r\n                            title={project.name}\r\n                            text={project.description}\r\n                            btn={project.btntext}\r\n                            tags={project.tags}\r\n                            onpress={() => props.projectOnAction(index, project.name)}\r\n                        />\r\n                    </div>\r\n                )\r\n            })}\r\n            </div>\r\n        </div>\r\n\r\n        <footer>\r\n            <h5>{props.footerText}</h5>\r\n        </footer>\r\n\r\n        <ModalBox\r\n            isVisible={props.isModalVisible}\r\n            onClose={props.onModalClose}\r\n            onCloseText='Close'\r\n            title={props.reachme.title}\r\n            content={\r\n            () => {\r\n            return (\r\n                <div id='ModalBoxContents'>\r\n                    { props.reachme.items.map((item :HomeLayoutInterface.ReachMeItems, index :number) => {\r\n                    return (\r\n                        <div className='items' key={index}>\r\n                            { item.link ?\r\n                                <a href={item.link}>{item.name}</a>\r\n                                :\r\n                                <h4>{item.name}</h4>\r\n                            }\r\n                            { item.text && <p>{item.text}</p> }\r\n                            { item.note && <p className='note'>{item.note}</p> }\r\n                        </div>\r\n                    )})}\r\n                </div>\r\n            )}}\r\n        />\r\n \r\n    </div> \r\n    );\r\n}\r\n","/**\r\n * \r\n */\r\nimport { useHistory } from 'react-router-dom';\r\nimport { FaHome, FaReact } from 'react-icons/fa';\r\n//import { MdContactPage } from 'react-icons/md';\r\nimport { Navbar, SlidingMenu } from '../../UIElements';\r\nimport useDimension from '../../_app/useWindowDimension';\r\n\r\nexport default function NavigationBar() {\r\n    const { isMobile } = useDimension();\r\n    const history = useHistory();\r\n    \r\n    const navitems = [\r\n        {\r\n            name: ' Home',\r\n            icon: () => <FaHome />,\r\n            active: window.location.href.endsWith('/')\r\n        },\r\n        {\r\n            name: ' Projects',\r\n            icon: () => <FaReact />,\r\n            active: window.location.href.endsWith('/projects')\r\n        },\r\n        /*\r\n        {\r\n            name: ' Contacts',\r\n            icon: () => <MdContactPage />,\r\n        },\r\n        */\r\n    ];\r\n\r\n    const handleNavigation = (i :number, name :string) => {\r\n        if(i === 0) history.push('/');\r\n        if(i === 1) history.push('/projects');\r\n    }\r\n\r\n    return (\r\n        <div style={{\r\n            height:     '2.5em',\r\n            position:   'fixed',\r\n            top:         0,\r\n            left:        0,\r\n            width:      '100vw'\r\n        }}>\r\n            { !isMobile ?\r\n                <Navbar\r\n                    brandIconPath={''}\r\n                    items={navitems}\r\n                    callback={handleNavigation}\r\n                />\r\n                :\r\n                <SlidingMenu\r\n                    items={navitems}\r\n                    callback={handleNavigation}\r\n                />\r\n            }\r\n        </div>\r\n    )\r\n}\r\n","/**\r\n    @TYPE\r\n        Controller - A component that handles the functionality\r\n\r\n    @DESCRIPTION\r\n        It also handle the process (what happen when a button is clicked).\r\n\r\n    @VISIBLE\r\n        The user is at home page\r\n\r\n    @NOTICE\r\n        This component return statement should not contain any html tags and text/data.\r\n        only providing the process and data from StateAPI\r\n*/\r\nimport React from 'react';\r\nimport HomeLayout from '../LayoutViews/HomeLayout';\r\nimport porfolioinfo from '../_database/portfolio.json';\r\nimport NavigationBar from './shared/NavigationBar';\r\n\r\nexport default function HomeScene() {\r\n    const [modalVisible, setModalVisible] = React.useState(false);\r\n\r\n    const handleIntroductionBTNAction = (i :number, itemname :string) => {\r\n        if(i === 0) {\r\n            window.open('./downloadable/amir-anghelo-resume-webdeveloper.pdf');\r\n        }\r\n        if(i === 1)\r\n            setModalVisible(true);\r\n    }\r\n\r\n    const handleProjectAction = (index :number, name :string) => {\r\n        window.open( porfolioinfo.projects[index].link);\r\n    }\r\n\r\n    const handleModalClose = () => {\r\n        setModalVisible(false);\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <NavigationBar />\r\n            <HomeLayout\r\n                introduction={{\r\n                    title:      porfolioinfo.name,\r\n                    alias:      porfolioinfo.title,\r\n                    text:       porfolioinfo.introtext,\r\n                    imagepath:  porfolioinfo.profile,\r\n                    btnaction:  porfolioinfo.btnaction,\r\n                    btnactioncallback: handleIntroductionBTNAction\r\n                }}\r\n\r\n                reachme={porfolioinfo.reachme}\r\n                isModalVisible={modalVisible}\r\n                onModalClose={handleModalClose}\r\n\r\n                skills={porfolioinfo.skills}\r\n                projects={porfolioinfo.projects}\r\n                projectOnAction={handleProjectAction}\r\n\r\n                footerText={porfolioinfo.footerText}\r\n            />\r\n        </React.Fragment>\r\n    );\r\n}\r\n","/**\r\n * \r\n */\r\nimport './layout/project.scss';\r\nimport { ProjectLayoutInterface } from './_lib/ProjectLayoutInterface';\r\nimport { BasicCard, LinedStyled } from '../UIElements';\r\nimport useDimension from '../_app/useWindowDimension';\r\n\r\nexport default function ProjectLayout(props :ProjectLayoutInterface.propsReceive ) {\r\n    const { isMobile } = useDimension();\r\n\r\n    return (\r\n        <div id='projects'>\r\n            <LinedStyled\r\n                text='My Projects'\r\n                isHorizontal={!isMobile}\r\n            />\r\n\r\n            <div id='projectslist'>\r\n                <div className='projects-item'>\r\n                { props.projects.map((project :ProjectLayoutInterface.Cards, index :number) => {\r\n                    return (\r\n                        <div key={index}>\r\n                            <BasicCard\r\n                                image={project.image}\r\n                                title={project.name}\r\n                                text={project.description}\r\n                                btn={project.btntext}\r\n                                tags={project.tags}\r\n                                onpress={() => props.projectOnAction(index, project.name)}\r\n                            />\r\n                        </div>\r\n                    )\r\n                })}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n","/**\r\n    @TYPE\r\n        Controller - A component that handles the functionality\r\n\r\n    @DESCRIPTION\r\n        It also handle the process (what happen when a button is clicked).\r\n\r\n    @VISIBLE\r\n        The user is at home page\r\n\r\n    @NOTICE\r\n        This component return statement should not contain any html tags and text/data.\r\n        only providing the process and data from StateAPI\r\n*/\r\nimport React from 'react';\r\nimport NavigationBar from './shared/NavigationBar';\r\nimport ProjectLayout from '../LayoutViews/ProjectLayout';\r\nimport projectlist from '../_database/projectslist.json';\r\n\r\n\r\nexport default function ProjectScene() {\r\n    const handleProjectAction = (index :number, name :string) => {\r\n        window.open( projectlist.projects[index].link);\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <NavigationBar />\r\n            <ProjectLayout\r\n                projects={ projectlist.projects }\r\n                projectOnAction={handleProjectAction}\r\n            />\r\n        </React.Fragment>\r\n    );\r\n}\r\n","/*\n*/\nimport React from 'react';\n\nimport {\n  contextStore,\n  createDefaultState,\n  RootReducer} from './StateAPI';\n\nimport {\n  HashRouter as Router,\n  Switch,\n  Route,\n} from \"react-router-dom\";\n\n\nimport HomeScene from './AppComponents/HomeScene';\nimport ProjectScene from './AppComponents/ProjectScene';\n\nfunction App() {\n  const [state, dispatch] = React.useReducer(RootReducer, createDefaultState());\n\n  return (\n    <React.Fragment>\n      <contextStore.Provider value={{state, dispatch}}>\n        <Router>\n          <Switch>\n            <Route path=\"/\"         exact component={() => <HomeScene />} />\n            <Route path=\"/projects\" exact component={() => <ProjectScene />} />\n          </Switch>\n        </Router>\n      </contextStore.Provider>\n    </React.Fragment>\n  );\n}\n\nexport default App;\n","/*\r\n    Describe the application main (global) state using the context API\r\n*/\r\nexport interface State {\r\n    /**\r\n     * The text used to determine the current text displayed in the application.\r\n     * @type string\r\n     * @default \"Hello there\"\r\n     */\r\n    text: string; \r\n}\r\n\r\nexport function createDefaultState() :State {\r\n    return {\r\n        text: \"Hello there\",\r\n    }\r\n}\r\n","/*\n    * TYPE\n        Scene - A screen is a component that occupies a large part of the screen\n        Index - A component that does not display itself\n        Fragment of ...\n\n    * DESCRIPTION\n\n    * VISIBLE WHEN\n*/\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}