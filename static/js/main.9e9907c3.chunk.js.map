{"version":3,"sources":["StateAPI/ActionType.ts","StateAPI/RootReducer.ts","StateAPI/index.ts","UIElements/Navbar/Subitem.tsx","UIElements/Navbar/Navbar.tsx","UIElements/SlidingMenu/MenuIcon.tsx","UIElements/SlidingMenu/Drawer.tsx","UIElements/SlidingMenu/SlidingMenu.tsx","UIElements/HeroProfile/ProfileIcon.tsx","UIElements/HeroProfile/TextAnimation.tsx","UIElements/HeroProfile/Text.tsx","UIElements/HeroProfile/HeroProfile.tsx","UIElements/FancyButton/FancyButton.tsx","UIElements/BasicCard/BasicCard.tsx","UIElements/LinedStyled/LinedStyled.tsx","UIElements/GridImageAccordion/GridImageAccordion.tsx","UIElements/HighFive/HighFive.tsx","UIElements/Form/Form.tsx","UIElements/SocialLinks/SocialLinks.tsx","LayoutViews/HomeLayout.tsx","_app/useWindowDimension.tsx","AppComponents/shared/NavigationBar.tsx","AppComponents/HomeScene.tsx","LayoutViews/ProjectLayout.tsx","AppComponents/ProjectScene.tsx","App.tsx","StateAPI/State.ts","index.tsx"],"names":["ActionType","RootReducer","state","action","type","test","alert","console","error","contextStore","React","createContext","Subitem","props","item","subitem","className","name","map","i","onClick","callback","index","icon","active","disabled","Navbar","id","brandIconPath","src","alt","items","MenuIcon","isCrossed","onMenuIconPress","Drawer","isVisible","length","SubItem","cb","n","SlidingMenu","useState","drawerOpen","setDrawerOpen","cross","setCross","ProfileIcon","undefined","imagepath","Fragment","imagesize","style","width","height","TextAnimation","update","useRef","timeToUpdate","makeUpdate","useEffect","setInterval","current","clearInterval","setindex","isOpactity","setOpacity","tags","Text","welcomemsg","text","split","generateTagLine","btnaction","btnactioncallback","HeroProfile","FancyButton","e","stopPropagation","BasicCard","image","title","btn","onpress","LinedStyled","isHorizontal","GridImageAccordion","setActive","setActiveFloat","images","image1","image2","image3","image4","texts","text1","text2","text3","text4","whichText","HighFive","currentState","setState","isFadeout","setFadeOut","intro","setTimeout","transistion","aboutme","Form","formData","setData","handleTextChange","newdata","data","value","target","forms","onSubmit","preventDefault","form","onChange","SocialLinks","github","href","size","linkedin","facebook","twitter","HomeLayout","introduction","skills","projects","project","description","btntext","projectOnAction","projectOnMore","introduceMe","contactMe","footer","links","getWindowDimensions","window","innerWidth","innerHeight","isMobile","isTablet","isDesktop","useWindowDimensions","windowDimensions","setWindowDimensions","handleResize","addEventListener","removeEventListener","NavigationBar","useDimension","history","useHistory","navitems","location","endsWith","handleNavigation","push","position","top","left","HomeScene","porfolioinfo","herosection","itemname","open","resumeDownload","skilsSections","link","introsection","ProjectLayout","ProjectScene","projectlist","App","useReducer","dispatch","Provider","path","exact","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9e9907c3.chunk.js","sourcesContent":["/*\r\n    Defines the available action type\r\n*/\r\n\r\n/**\r\n * The list of available action that will be use by the RootReducer and Actions functions\r\n */\r\nexport enum ActionType {\r\n    test,\r\n    \r\n}\r\n","/*\r\n    The root reducer.\r\n    This function is should only use be used by App.jsx since the App.js set up the context api\r\n*/\r\nimport { ActionType } from \"./ActionType\";\r\nimport { ActionInterface } from \"./Interface\";\r\nimport { State } from './State';\r\n\r\n/**\r\n * The reducer (Google about Flow design pattern for info). \r\n * This function is indirectly called by the use of dispatch(ActionInterface)\r\n*/\r\nexport function RootReducer(state :State, action :ActionInterface) :State {\r\n    switch( action.type ) {\r\n        case ActionType.test:\r\n            alert(\"Wow! The StateAPI (context api / redux) is WORKING!\");\r\n            return state;\r\n\r\n        default:\r\n            console.error(\"The Action was not provided in the RootReducer\");\r\n            return state;\r\n    }\r\n}\r\n","/*\r\n    Contains all of the state api functionality so there is no need to \r\n    import each one by one\r\n*/\r\nimport React from 'react';\r\nimport { StateAPI } from './Interface';\r\nexport type { StateAPI } from './Interface';\r\nexport { createDefaultState } from './State';\r\nexport { Action } from './Actions';\r\n\r\n//this reducer is called only by the main app\r\nexport { RootReducer } from './RootReducer';\r\n\r\n/**\r\n * Contains a context (store). Google about Flow Design Pattern for more info.\r\n */\r\n//@ts-ignore - ignore the passed null vale since the context store does not have default value\r\nexport const contextStore = React.createContext<StateAPI>(null);\r\n","/*\r\n    A resuable (not app specific component) navbar.\r\n    The parent element should provide the position: fixed style.                 \r\n*/\r\nimport './Navbar.scss';\r\nimport { NavItem } from '../_lib/NavItem';\r\n\r\ninterface propsReceive {\r\n    item        :NavItem;\r\n    index       :number;\r\n    callback    :(index :number, itemname :string) => void;  \r\n}\r\n\r\nexport default function Subitem(props :propsReceive) {\r\n    if(props.item.subitem) \r\n        return (\r\n            <span key={props.index} className='item'>\r\n            { props.item.name }\r\n                <div className='dropdown'>\r\n                    <div className='invisiblebar'></div>\r\n                    {\r\n                        props.item.subitem.map((subitem :any, i :number) => {\r\n                            return (\r\n                                <div key={i}\r\n                                    onClick={()=> props.callback(props.index, subitem.name)}\r\n                                    className='subitem'\r\n                                >\r\n                                     <span className='icon'>\r\n                                        { subitem.icon && subitem.icon() }\r\n                                    </span>\r\n                                    <span>\r\n                                        { subitem.name }\r\n                                    </span>\r\n                                </div>\r\n                            )\r\n                        })\r\n                    }\r\n                </div>\r\n            </span>\r\n        );\r\n    else\r\n        return (\r\n            <span key={props.index}\r\n                className={props.item.active ? 'active' : props.item.disabled ? 'disabled' : 'item'}\r\n                onClick={() => {\r\n                    if( !props.item.active && !props.item.disabled )\r\n                        props.callback(props.index, props.item.name);\r\n                }}>\r\n                 <span className='icon'>\r\n                    { props.item.icon && props.item.icon() }\r\n                </span>\r\n                <span>\r\n                    { props.item.name }\r\n                </span>\r\n            </span>\r\n        );\r\n}\r\n","/*\r\n    A resuable (not app specific component) navbar.\r\n    The parent element should provide the position: fixed style.\r\n\r\n    <Navbar\r\n        brandIconPath={'./assets/test.png'}\r\n        items={[\r\n            {\r\n                name: 'item1',\r\n                icon: () => <FaBeer />\r\n            },\r\n            {\r\n                name: 'item2',\r\n                subitem: [\r\n                    {\r\n                        name: 'sub 1',\r\n                        icon: () => <FaBeer />\r\n                    },\r\n                    {\r\n                        name: 'sub 2',\r\n                        icon: () => <FaBeer />\r\n                    }\r\n                ]\r\n            }\r\n        ]}\r\n        callback={(i :number, name :string) => console.log('you pressed :' + name)}\r\n    />             \r\n*/\r\nimport './Navbar.scss';\r\nimport { NavigationUIProps, NavItem } from '../_lib/NavItem';\r\nimport Subitem from './Subitem';\r\n\r\n/**\r\n * The navbar position by default is static.\r\n * The parent element should provide the positioning such as fixed.\r\n * \r\n * @props brandIconPath? :string;\r\n * @props callback       :(index :number, itemname :string) => void;\r\n * @props items          :[\r\n *  name: string, icon? :JSX.Element, active? :boolean, disabled? :boolean;\r\n *  subitem?: { name :string, icon?: JSX.Element, active? :boolean, disabled? :boolean }\r\n * ]\r\n * \r\n * @example\r\n * import { FaBeer } from 'react-icons/fa';\r\n    .....\r\n        <Navbar\r\n            items={[\r\n                {\r\n                    name: 'item1',\r\n                    icon: () => <FaBeer />\r\n                },\r\n                {\r\n                    name: 'item2',\r\n                    subitem: [\r\n                        {\r\n                            name: 'sub 1',\r\n                            icon: () => <FaBeer />,\r\n                            active: true\r\n                        },\r\n                        {\r\n                            name: 'sub 2',\r\n                            icon: () => <FaBeer />\r\n                        }\r\n                    ]\r\n                }\r\n            ]}\r\n            callback={(i :number, name :string) => console.log('you pressed :' + name)}\r\n        />\r\n */\r\nexport function Navbar(props :NavigationUIProps) {\r\n    return (\r\n        <div id='PongDesignNavbar'>\r\n            { props.brandIconPath && <img className='img' src={props.brandIconPath} alt={props.brandIconPath}/> }\r\n            <span className='navitemscontainer content-container'>\r\n            { props.items && props.items.map( (item :NavItem,  index :number) => {\r\n                return <Subitem\r\n                    key={index}\r\n                    item={item}\r\n                    index={index}\r\n                    callback={props.callback}\r\n                />\r\n            })}\r\n            </span>\r\n        </div>\r\n    );\r\n}\r\n","/*\r\n    Return an hambuger icon thru the use of stylesheet (no vector icon)\r\n*/\r\nimport React from 'react';\r\nimport './MenuIcon.scss';\r\n\r\ninterface propsReceive {\r\n    isCrossed :boolean;\r\n    onMenuIconPress?: (isCrossed :boolean) => void;\r\n}\r\n\r\nexport default function MenuIcon(props :propsReceive) {\r\n    function handleIconPressed() {\r\n        props.onMenuIconPress && props.onMenuIconPress(!props.isCrossed);\r\n    }\r\n\r\n    return (\r\n        <div id='menuicon' className={props.isCrossed ? 'change' : ''} onClick={handleIconPressed} >\r\n            <div className=\"bar1 change\"></div>\r\n            <div className=\"bar2\"></div>\r\n            <div className=\"bar3\"></div>\r\n        </div>\r\n    );\r\n}\r\n","/*\r\n*/\r\nimport React from 'react';\r\nimport './Drawer.scss';\r\n\r\nimport { NavItem, NavNameAndIcon } from '../_lib/NavItem';\r\n\r\ninterface propsReceive {\r\n    items?      :Array<NavItem>;\r\n    isVisible   :boolean;\r\n    callback    :(index :number, itemname :string) => void;   \r\n}\r\n\r\nexport default function Drawer(props :propsReceive) {\r\n    return (\r\n        <div id='PongDesignSlidingMenuDrawer' className={props.isVisible ? 'visible' : 'hidden'}>\r\n            {\r\n                props.items?.map((item :NavItem, index :number) => {\r\n                    return (\r\n                        <div key={index}\r\n                            className={item.active ? 'active' : item.disabled ? 'disabled' : 'item'}\r\n                            onClick={() => {\r\n                                if(item.active || item.disabled)\r\n                                    return;\r\n                                if(!item.subitem || item.subitem.length <= 0 )\r\n                                    props.callback(index, item.name)\r\n                            }}\r\n                        >\r\n                            <span className='icon'>\r\n                                { item.icon && item.icon() }\r\n                            </span>\r\n                            <span>\r\n                                { item.name }\r\n                            </span>\r\n                            <SubItem\r\n                                item={item}\r\n                                index={index}\r\n                                cb={(n :string) =>{\r\n                                    props.callback(index, n)\r\n                                }}\r\n                            />\r\n                        </div>\r\n                    )\r\n                })\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction SubItem( props :{item :NavItem, index :number, cb: (name :string) => void}) {\r\n    if(!props.item.subitem || props.item.subitem.length <= 0 )\r\n        return <span></span>\r\n\r\n    return (\r\n        <div className='subitemcontainer'>\r\n            {props.item.subitem.map((subitem :NavNameAndIcon, index :number) => {\r\n                return (\r\n                    <div\r\n                        key={index}\r\n                        onClick={() => props.cb(subitem.name)}\r\n                    >\r\n                        <span className='icon'>\r\n                                { subitem.icon && subitem.icon() }\r\n                            </span>\r\n                            <span>\r\n                                { subitem.name }\r\n                            </span>\r\n                    </div>\r\n                );\r\n            })}\r\n        </div>\r\n    );\r\n}\r\n","/*\r\n    Return a navbar with hamburger icon and drawer\r\n*/\r\nimport React from 'react';\r\nimport './SlidingMenu.scss';\r\n\r\nimport { NavigationUIProps } from '../_lib/NavItem';\r\nimport MenuIcon from './MenuIcon';\r\nimport Drawer from './Drawer';\r\n\r\n/**\r\n * Returns a Sliding Menu (Drawer) which includes a nav bar. The navbar position by default is static.\r\n * The parent element should provide the positioning such as fixed.\r\n * \r\n * @props brandIconPath? :string;\r\n * @props callback       :(index :number, itemname :string) => void;\r\n * @props items          :[\r\n *  name: string, icon? :JSX.Element, active? :boolean, disabled? :boolean;\r\n *  subitem?: { name :string, icon?: JSX.Element, active? :boolean, disabled? :boolean }\r\n * ]\r\n * \r\n * @example\r\n * import { FaBeer } from 'react-icons/fa';\r\n    .....\r\n        <SlidingMenu\r\n            items={[\r\n                {\r\n                    name: 'item1',\r\n                    icon: () => <FaBeer />\r\n                },\r\n                {\r\n                    name: 'item2',\r\n                    subitem: [\r\n                        {\r\n                            name: 'sub 1',\r\n                            icon: () => <FaBeer />,\r\n                            active: true\r\n                        },\r\n                        {\r\n                            name: 'sub 2',\r\n                            icon: () => <FaBeer />\r\n                        }\r\n                    ]\r\n                }\r\n            ]}\r\n            callback={(i :number, name :string) => console.log('you pressed :' + name)}\r\n        />\r\n */\r\nexport function SlidingMenu(props :NavigationUIProps) {\r\n    const [drawerOpen, setDrawerOpen] = React.useState(false);\r\n    const [cross, setCross]           = React.useState(false);\r\n\r\n    function handleMenuIconPress(isCrossed :boolean) {\r\n        setDrawerOpen(isCrossed);\r\n        setCross(isCrossed);\r\n    }\r\n\r\n    function handleNavItemPressed(index :number, name :string) {\r\n        setDrawerOpen(!drawerOpen);\r\n        setCross(false);\r\n        props.callback(index, name);\r\n    }\r\n\r\n    return (\r\n        <div id='PongDesignSlidingMenu'>\r\n            <span className='nav'>\r\n                <MenuIcon\r\n                    onMenuIconPress={handleMenuIconPress}\r\n                    isCrossed={cross}\r\n                />\r\n                {\r\n                    props.brandIconPath &&\r\n                    <img className='img' src={props.brandIconPath} alt={props.brandIconPath}/>\r\n                }\r\n            </span>\r\n            <div>\r\n                <Drawer\r\n                    isVisible={drawerOpen}\r\n                    items={props.items}\r\n                    callback={handleNavItemPressed}\r\n                />\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport './ProfileIcon.scss';\r\n\r\ninterface propsReceive {\r\n    imagepath?       :string;\r\n    imagesize?       :[string | number, string | number]\r\n}\r\n\r\nexport default function ProfileIcon(props :propsReceive) {\r\n    if(props.imagepath === undefined || props.imagepath === '')\r\n        return <React.Fragment></React.Fragment>\r\n\r\n    return (\r\n        <div className='imagecontainer'>\r\n            { props.imagesize ?\r\n                <img src={props.imagepath} alt={props.imagepath}\r\n                    style={{width: props.imagesize[0], height: props.imagesize[1]}}/>\r\n                :\r\n                <img src={props.imagepath} alt={props.imagepath} />\r\n            }\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport './TextAnimation.scss';\r\n\r\nexport interface propsReceive {\r\n    tags :string[];\r\n}\r\n\r\nexport default function TextAnimation(props :propsReceive) {\r\n    //use for timers\r\n    const update                     = React.useRef(false);\r\n    const [timeToUpdate, makeUpdate] = React.useState(false);\r\n    \r\n    React.useEffect(()=> {\r\n        const i = setInterval(() => {\r\n            update.current = !update.current;\r\n            makeUpdate(update.current)\r\n        }, 4000);\r\n        return () => clearInterval(i);\r\n    }, []);\r\n\r\n    const [index, setindex] = React.useState(-1);\r\n    const [isOpactity, setOpacity] = React.useState(false);\r\n\r\n    React.useEffect(() => {\r\n        if((index + 1) >= props.tags.length) {\r\n            setindex( 0 );\r\n        }\r\n        else\r\n            setindex( index + 1);\r\n        setOpacity( !isOpactity);\r\n        \r\n        // eslint-disable-next-line\r\n    }, [timeToUpdate])\r\n\r\n    return (\r\n        <div id='textslideup-animation'>\r\n            <div className='addOpacityEffect'>{props.tags[index]}</div>\r\n        </div>\r\n    )\r\n}\r\n","import './Text.scss';\r\n\r\n//import Typewriter from 'typewriter-effect';\r\nimport { FancyButton } from '..';\r\n\r\nimport TextAnimation from './TextAnimation';\r\nimport React from 'react';\r\n\r\nexport interface propsReceive {\r\n    welcomemsg?     :string;\r\n    name?           :string;\r\n    text?           :string;\r\n    tags?           :string[];\r\n    btnaction?      :Array<string>;\r\n    btnactioncallback? :(index :number, itemname :string) => void;\r\n}\r\n\r\nexport default function Text(props :propsReceive) {\r\n    function generateTagLine() {\r\n        if(!props.tags) return <React.Fragment></React.Fragment>\r\n        return (\r\n            <React.Fragment>\r\n            { props.text?.split(' ').map((text :string, index :number) => {\r\n                    if(text === \"[]\")\r\n                        return (\r\n                            <span key={index}>\r\n                                <TextAnimation tags={props.tags ? props.tags : []} />\r\n                            </span>\r\n                        );\r\n                    return text + \" \";\r\n                })    \r\n            }\r\n            </React.Fragment>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <div className='text'>\r\n            <h3>{ props.welcomemsg }</h3>\r\n\r\n            <h2>\r\n                { props.name }\r\n                { /*<Typewriter\r\n                    options={{\r\n                        strings: props.name,\r\n                        cursor: '',\r\n                        autoStart: true,\r\n                        loop: false,\r\n                        delay: 70,\r\n                    }}\r\n                /> */ }\r\n            </h2>\r\n\r\n            <h1 className='tagline'>\r\n                { generateTagLine() }\r\n            </h1>\r\n\r\n            { props.btnaction && props.btnactioncallback &&\r\n            <div id='calltoactions'> \r\n                { props.btnaction[0] && \r\n                    <FancyButton name={props.btnaction[0]}\r\n                    //@ts-ignore\r\n                    callback={() => props.btnactioncallback(0, props.btnaction[0])} />\r\n                }\r\n                { props.btnaction[1] &&\r\n                    <FancyButton name={props.btnaction[1]}\r\n                    //@ts-ignore\r\n                    callback={() => props.btnactioncallback(1, props.btnaction[1])} />\r\n                }\r\n            </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n","import './HeroProfile.scss';\r\nimport { HeroProfileInterface } from  '../_lib/HeroProfile';\r\n\r\nimport ProfileIcon from './ProfileIcon';\r\nimport Text from './Text';\r\n\r\n/**\r\n * Used as the Hero Section\r\n * @example\r\n    imagepath?      :string;\r\n    imagesize?      :[string | number, string | number]\r\n    welcomemsg?     :string;\r\n    name?           :string;\r\n    text?           :string;\r\n    btnaction?      :Array<string>;\r\n    btnactioncallback? :(index :number, itemname :string) => void;\r\n\r\n    {\r\n        \"imagepath\":        \"./assets/profile.jpg\",\r\n        \"welcomemsg\":       \"Hi my name is\",\r\n        \"name\":             \"Anghelo Amir\",\r\n        \"text\":             \"\\\"Let's us [] Websites and Apps\\\"\",\r\n        \"tags\":             [\"Make\", \"Improve\", \"Maintain\"],\r\n        \"btnaction\":        [\"My Projects\", \"Contact Me\"],\r\n        \"resumeDownload\":   \"https://angheloamir.github.io/#/projects\"\r\n    }\r\n */\r\nexport function HeroProfile(props :HeroProfileInterface) {   \r\n    return (\r\n        <div id='PongDesignDescriptiveCard'>\r\n            <ProfileIcon\r\n                {...props}\r\n            />\r\n            <Text\r\n                {...props}\r\n            />            \r\n        </div>\r\n    )\r\n}\r\n","import './FancyButton.scss';\r\n\r\n/**\r\n * A button designed with PongDesign theme\r\n * @example\r\n * name \t\t:string;\r\n * callback\t\t:() => void; \r\n */\r\nexport function FancyButton( {name, callback } :{name :string, callback :() => void}) {\r\n\tconst handleClick = (e :any) => {\r\n\t\te.stopPropagation();\r\n\t\tcallback();\r\n\t}\r\n\t\r\n\treturn (\r\n\t\t<button id=\"PongDesignFancyButton\" onClick={ handleClick } >\r\n\t\t\t<span>{name}</span>\r\n\t\t</button>\r\n\t);\r\n}\r\n","import './BasicCard.scss';\r\n\r\nimport { BasicCardInterface, FancyButton } from '../';\r\n\r\n/**\r\n * Contents of the Basic Card UI Element\r\n * @example\r\n * image?   :string;\r\n    title?   :string;\r\n    text?    :string;\r\n    btn?     :string;\r\n    tags?    :Array<string>;\r\n    onpress? :() => void;\r\n */\r\nexport function BasicCard( props :BasicCardInterface) {\r\n    return (\r\n        <div id='PongDesignBasicCard'>\r\n            { props.image && <img src={props.image} alt={props.image} />}\r\n            <div className=\"information\">\r\n                { props.title && <h3>{props.title}</h3> }\r\n                { props.text  && <p>{props.text}</p> }\r\n                <div className='tags'>\r\n                    { props.tags  && props.tags.map((item :string, i :number) => {\r\n                        return (\r\n                            <span key={i}>{item}</span>\r\n                        )\r\n                    })\r\n                    }\r\n                </div>\r\n            </div>\r\n            <div className='btn'>\r\n                { props.btn &&\r\n                    <FancyButton\r\n                        name={props.btn}\r\n                        //@ts-ignore\r\n                        callback={() => props.onpress()}\r\n                    />\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n//{ props.btn && <button onClick={props.onpress}>{props.btn}</button> }\r\n","import './LinedStyled.scss';\r\n\r\n/**\r\n * Draw a horizontal with a text in the middle (or just line or text)\r\n * @example\r\n * text?            :string;\r\n * isHorizontal?    :boolean; (Will render line)\r\n */\r\nexport function LinedStyled({text, isHorizontal} :{text? :string, isHorizontal? :boolean}) {\r\n    return (\r\n        <div id='LinedStyled'>\r\n            { isHorizontal && <div className='line'></div> }\r\n            { text && <h3>{text}</h3> }\r\n            { isHorizontal && <div className='line'></div> }\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport './GridImageAccordion.scss';\r\nimport { GIAInterface } from '../';\r\n\r\n/**\r\n * An accordion based on the images. When an images is hovered or clicked, a text will appear on the\r\n * left side (desktop) or in the bottom (mobile)\r\n * \r\n * @example\r\n * The It must be supplied with four items (images and text)\r\n * images  :{\r\n        image1  :string;\r\n        image2  :string;\r\n        image3  :string;\r\n        image4  :string;\r\n    }\r\n    texts   :{\r\n        text1   :{\r\n            title   :string;\r\n            text    :string;\r\n        };\r\n        text2   :{\r\n            title   :string;\r\n            text    :string;\r\n        }\r\n        text3   :{\r\n            title   :string;\r\n            text    :string;\r\n        }\r\n        text4   :{\r\n            title   :string;\r\n            text    :string;\r\n        }\r\n    }\r\n */\r\nexport function GridImageAccordion(props :GIAInterface) {\r\n    const [active, setActive] = React.useState(0);\r\n\r\n    function setActiveFloat(i :number) {\r\n        setActive(i);\r\n    }\r\n\r\n    function whichText() {\r\n        switch(active) {\r\n            case 0:\r\n                return (\r\n                    <div className=\"text-container opacity\"  >\r\n                        <h3>{ props.texts.text1.title }</h3>\r\n                        <p> { props.texts.text1.text }</p>\r\n                    </div>\r\n                );\r\n            case 1:\r\n                return (\r\n                    <div className=\"text-container opacity1\"  >\r\n                        <h3>{ props.texts.text2.title }</h3>\r\n                        <p> { props.texts.text2.text }</p>\r\n                    </div>\r\n                );\r\n            case 2:\r\n                return (\r\n                    <div className=\"text-container opacity2\"  >\r\n                        <h3>{ props.texts.text3.title }</h3>\r\n                        <p> { props.texts.text3.text }</p>\r\n                    </div>\r\n                );\r\n            case 3:\r\n                return (\r\n                    <div className=\"text-container opacity3\"  >\r\n                        <h3>{ props.texts.text4.title }</h3>\r\n                        <p> { props.texts.text4.text }</p>\r\n                    </div>\r\n                );\r\n            default:\r\n                return (\r\n                    <div></div>\r\n                )\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div id='GridImageAccordion'>\r\n            <div className='images-container'>\r\n                <img\r\n                    src={props.images.image1}\r\n                    className={active === 0 ? 'activeanim' : ''}\r\n                    onClick={() => setActiveFloat(0)}\r\n                    alt=' icon'\r\n                />\r\n                <img\r\n                    src={props.images.image2}\r\n                    className={active === 1 ? 'activeanim' : ''}\r\n                    onClick={() => setActiveFloat(1)}\r\n                    alt=' icon'\r\n                />\r\n                <img \r\n                    src={props.images.image3}\r\n                    className={active === 2 ? 'activeanim' : ''}\r\n                    onClick={() => setActiveFloat(2)}\r\n                    alt=' icon'\r\n                />\r\n                <img \r\n                    src={props.images.image4}\r\n                    className={active === 3 ? 'activeanim' : ''}\r\n                    onClick={() => setActiveFloat(3)}\r\n                    alt=' icon'\r\n                />\r\n            </div>\r\n            { whichText() }\r\n        </div>\r\n    )\r\n}\r\n","import { HighFiveInterface } from \"..\";\r\nimport './HighFive.scss';\r\n\r\nimport React from 'react';\r\n\r\nexport function HighFive( props :HighFiveInterface) {\r\n    const [currentState, setState] = React.useState(0);\r\n    const [isFadeout, setFadeOut] = React.useState(false);\r\n\r\n    return (\r\n        <div id=\"highfive\">\r\n        { currentState === 0 &&\r\n            <div className={`slide1 ${isFadeout ? \"fadeout-anim\" : \" \"}`}>\r\n                <div className=\"image-state\">\r\n                    <img src={props.intro.image} alt={props.intro.image}\r\n                        onClick={() => {\r\n                            setFadeOut(true);\r\n                            setTimeout(() => setState(1), 1000);\r\n                            setTimeout(() => setState(2), 4000);\r\n                        }}\r\n                    />\r\n                </div>\r\n                <div className=\"text-state\">\r\n                    <h1>{props.intro.text}</h1>\r\n                </div>\r\n            </div>\r\n        }\r\n\r\n        { currentState === 1 &&\r\n            <div className=\"slide1 transmission-state\">\r\n                <div className=\"text-state\">\r\n                    <h1>{props.transistion.text}</h1>\r\n                </div>\r\n            </div>\r\n        }\r\n\r\n        { currentState === 2 &&\r\n            <div className=\"aboutme\">\r\n                <div className=\"text-state\">\r\n                    <p>{props.aboutme.text}</p>\r\n                </div>\r\n                <div className=\"aboutme-image\">\r\n                    <img src={props.aboutme.image} alt={props.intro.image}\r\n                        \r\n                    />\r\n                </div>\r\n                \r\n            </div>\r\n        }\r\n\r\n        </div>\r\n    )\r\n}\r\n","import './form.module.scss';\r\nimport '../FancyButton/FancyButton.scss';\r\nimport { FormInterface } from '../';\r\nimport React from 'react';\r\n\r\n/**\r\n * A resuable form\r\n * \r\n * @example\r\n * <Form \r\n        forms={[\r\n            {\r\n                name: 'input 1',\r\n                type: 'text'\r\n            }\r\n        ]}\r\n        callback={(data) => alert(JSON.stringify(data))}\r\n * />\r\n */\r\nexport function Form(props :FormInterface) {\r\n    const [formData, setData] = React.useState([{}]);\r\n\r\n    React.useEffect(() => {\r\n        const forms = props.forms.map(data => {\r\n            return { name: data.name, value: '' }\r\n        });\r\n        setData(forms);\r\n    }, [props.forms]);\r\n\r\n    function handleSubmit( e :React.SyntheticEvent ) {\r\n        e.preventDefault();\r\n        props.callback(formData);\r\n    }\r\n\r\n    function handleTextChange(e :React.ChangeEvent<HTMLTextAreaElement | HTMLInputElement>, index :number) {\r\n        const newdata = formData.map((data :any, i :number) => {\r\n            if(i === index)\r\n                return { name: data.name, value :e.target.value }\r\n            return data;\r\n        });\r\n        setData(newdata);\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            { props.forms.map((form :{name :string, type: string}, index :number) => {\r\n                return (\r\n                    <div>\r\n                        <label>{form.name}</label>\r\n                        { form.type === 'text' ?\r\n                            <textarea\r\n                                onChange={(e) => handleTextChange(e, index)}\r\n                            />\r\n                            :\r\n                            <input type={form.type}\r\n                                onChange={(e) => handleTextChange(e, index)}\r\n                            />\r\n                        }\r\n                    </div>\r\n                )\r\n            })}\r\n            <button type=\"submit\" id=\"PongDesignFancyButton\">Submit</button>\r\n        </form>\r\n    );\r\n}\r\n","import './SocialLinks.scss';\r\nimport { SocialLinksInterface } from '..';\r\n\r\nimport { FaFacebookSquare, FaTwitterSquare, FaGithub, FaLinkedin} from 'react-icons/fa'\r\n\r\nexport function SocialLinks(props :SocialLinksInterface) {\r\n    const size = 52;\r\n\r\n    return (\r\n        <div id='SocialLinks'>\r\n            { props.github &&\r\n                <a href={props.github}>\r\n                    <FaGithub\r\n                        size={size}\r\n                    />\r\n                </a>\r\n            }\r\n            { props.linkedin &&\r\n                <a href={props.linkedin}>\r\n                    <FaLinkedin\r\n                        size={size}\r\n                    />\r\n                </a>\r\n            }\r\n            { props.facebook &&\r\n                <a href={props.facebook}>\r\n                    <FaFacebookSquare\r\n                        size={48}\r\n                    />\r\n                </a>\r\n            }\r\n            { props.twitter &&\r\n                <a href={props.twitter}>\r\n                    <FaTwitterSquare\r\n                        size={size}\r\n                    />\r\n                </a>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n","/**\r\n    @TYPE\r\n        Layout - A layout \r\n\r\n    @DESCRIPTION\r\n        Handle and renders appearance of the home page\r\n\r\n    @VISIBLE\r\n        The user is at home page\r\n*/\r\nimport './layout/home.scss';\r\n//import useDimension from '../_app/useWindowDimension';\r\nimport { HomeLayoutInterface } from './_lib/HomeLayoutInterface';\r\nimport {\r\n    HeroProfile,\r\n    GridImageAccordion,\r\n    //Carousel,\r\n    //Columns,\r\n    BasicCard,\r\n    FancyButton,\r\n    HighFive,\r\n    //LinedStyled,\r\n    //ModalBox\r\n    Form,\r\n    SocialLinks\r\n} from '../UIElements';\r\n\r\nexport default function HomeLayout( props :HomeLayoutInterface.propsReceive ) {\r\n    //const { isMobile } = useDimension();\r\n\r\n    return ( \r\n    <div id='Home'>\r\n        <section id='hero'>\r\n            <div className='content-container'>\r\n                <HeroProfile {...props.introduction} />\r\n            </div>\r\n        </section>\r\n\r\n        <section id='skills'>\r\n            <div className='content-container'>\r\n                <h1 className='skills-title'>What can I <span>DO?</span></h1>\r\n                <GridImageAccordion { ...props.skills }/>\r\n            </div>\r\n        </section>\r\n        \r\n        <section id='projects'>\r\n            <div className='content-container'>\r\n                <h1 className='projects-title'><span>PROJECTS</span> that I Create</h1>\r\n                <div className='items'>\r\n                    { props.projects.map((project :any, index :number) => {\r\n                        return(\r\n                            <div className='item'>\r\n                                <BasicCard\r\n                                    image={project.image}\r\n                                    title={project.name}\r\n                                    text={project.description}\r\n                                    btn={project.btntext}\r\n                                    tags={project.tags}\r\n                                    onpress={() => props.projectOnAction(index, project.name)}\r\n                                />\r\n                            </div>\r\n                        )\r\n                    })}\r\n                </div>\r\n                <div className=\"btn-more\">\r\n                    <FancyButton\r\n                        name='See more of my projects'\r\n                        callback={props.projectOnMore}\r\n                    />\r\n                </div>\r\n            </div>\r\n        </section>\r\n\r\n        <section id='HighFive'>\r\n            <div className='content-container'>\r\n                <h1 className='title'>Nice to <span>MEET</span> you!</h1>\r\n                <HighFive\r\n                    { ...props.introduceMe }\r\n                />\r\n            </div>\r\n        </section>\r\n\r\n        <section id='ContactForm'>\r\n            <div className='content-container'>\r\n                <h1 className='title'>\r\n                    Is am <span>INTERESTING?</span>\r\n                    <br />\r\n                    <span> Contact Me! </span>\r\n                </h1>\r\n                <Form\r\n                    { ...props.contactMe }\r\n                />\r\n            </div>  \r\n        </section>\r\n\r\n        <footer>\r\n            <div className='content'>\r\n                <div className='links'>\r\n                    <SocialLinks\r\n                        {...props.footer.links}\r\n                    />\r\n                </div>\r\n                <p>{props.footer.text}</p>\r\n            </div>\r\n        </footer>\r\n        \r\n    </div> \r\n    );\r\n}\r\n\r\n/*\r\n <p style={{width: '50px', margin: 'auto', paddingTop: '5rem'}}>\r\n        Lorem ipsum dolor sit amet consectetur adipisicing elit. A\r\n    </p>\r\n\r\n        <ModalBox\r\n            isVisible={props.isModalVisible}\r\n            onClose={props.onModalClose}\r\n            onCloseText='Close'\r\n            title={props.reachme.title}\r\n            content={\r\n            () => {\r\n            return (\r\n                <div id='ModalBoxContents'>\r\n                    { props.reachme.items.map((item :HomeLayoutInterface.ReachMeItems, index :number) => {\r\n                    return (\r\n                        <div className='items' key={index}>\r\n                            { item.link ?\r\n                                <a href={item.link}>{item.name}</a>\r\n                                :\r\n                                <h4>{item.name}</h4>\r\n                            }\r\n                            { item.text && <p>{item.text}</p> }\r\n                            { item.note && <p className='note'>{item.note}</p> }\r\n                        </div>\r\n                    )})}\r\n                </div>\r\n            )}}\r\n        />\r\n*/","import { useState, useEffect } from 'react';\r\n\r\nfunction getWindowDimensions() {\r\n  const { innerWidth: width, innerHeight: height } = window;\r\n\r\n  return {\r\n    width,\r\n    height,\r\n    isMobile:   width >= 578 ? false : true,\r\n    isTablet:   width >= 756 ? false : true,\r\n    isDesktop:  width >= 981 ? true  : false\r\n  };\r\n}\r\n\r\n/**\r\n * A hooks that return the current screen dimension\r\n * @returns \r\n *  width     :number,\r\n    height    :number,\r\n    isMobile  :boolean\r\n    isDesktop :boolean\r\n */\r\nexport default function useWindowDimensions() {\r\n  const [windowDimensions, setWindowDimensions] = useState(getWindowDimensions());\r\n\r\n  useEffect(() => {\r\n    function handleResize() {\r\n      setWindowDimensions(getWindowDimensions());\r\n    }\r\n\r\n    window.addEventListener('resize', handleResize);\r\n    return () => window.removeEventListener('resize', handleResize);\r\n  }, []);\r\n\r\n  return windowDimensions;\r\n}\r\n","/**\r\n * \r\n */\r\nimport { useHistory } from 'react-router-dom';\r\nimport { FaHome, FaReact } from 'react-icons/fa';\r\n//import { MdContactPage } from 'react-icons/md';\r\nimport { Navbar, SlidingMenu } from '../../UIElements';\r\nimport useDimension from '../../_app/useWindowDimension';\r\n\r\nexport default function NavigationBar() {\r\n    const { isMobile } = useDimension();\r\n    const history = useHistory();\r\n    \r\n    const navitems = [\r\n        {\r\n            name: ' Home',\r\n            icon: () => <FaHome />,\r\n            active: window.location.href.endsWith('/')\r\n        },\r\n        {\r\n            name: ' Projects',\r\n            icon: () => <FaReact />,\r\n            active: window.location.href.endsWith('/projects')\r\n        },\r\n        /*\r\n        {\r\n            name: ' Contacts',\r\n            icon: () => <MdContactPage />,\r\n        },\r\n        */\r\n    ];\r\n\r\n    const handleNavigation = (i :number, name :string) => {\r\n        if(i === 0) history.push('/');\r\n        if(i === 1) history.push('/projects');\r\n    }\r\n\r\n    return (\r\n        <div style={{\r\n            height:     '2.5em',\r\n            position:   'fixed',\r\n            top:         0,\r\n            left:        0,\r\n            width:      '100vw'\r\n        }}>\r\n            { !isMobile ?\r\n                <Navbar\r\n                    brandIconPath={''}\r\n                    items={navitems}\r\n                    callback={handleNavigation}\r\n                />\r\n                :\r\n                <SlidingMenu\r\n                    items={navitems}\r\n                    callback={handleNavigation}\r\n                />\r\n            }\r\n        </div>\r\n    )\r\n}\r\n","/**\r\n    @TYPE\r\n        Controller - A component that handles the functionality\r\n\r\n    @DESCRIPTION\r\n        It also handle the process (what happen when a button is clicked).\r\n\r\n    @VISIBLE\r\n        The user is at home page\r\n\r\n    @NOTICE\r\n        This component return statement should not contain any html tags and text/data.\r\n        only providing the process and data from StateAPI\r\n*/\r\nimport React from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport HomeLayout from '../LayoutViews/HomeLayout';\r\nimport porfolioinfo from '../_database/portfolio.json';\r\nimport NavigationBar from './shared/NavigationBar';\r\n\r\n\r\nexport default function HomeScene() {\r\n    const history = useHistory();\r\n    //const [modalVisible, setModalVisible] = React.useState(false);\r\n\r\n    const handleIntroductionBTNAction = (i :number, itemname :string) => {\r\n        if(i === 0) {\r\n            window.open(porfolioinfo.herosection.resumeDownload);\r\n        }\r\n        //if(i === 1)\r\n        //    setModalVisible(true);\r\n    }\r\n\r\n    const handleProjectAction = (index :number, name :string) => {\r\n        window.open( porfolioinfo.projects[index].link);\r\n    }\r\n\r\n    const handleProjectMore = () => {\r\n        history.push('/projects');\r\n    }\r\n\r\n    //const handleModalClose = () => {\r\n    //    setModalVisible(false);\r\n    //}\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <HomeLayout\r\n                //Hero section data\r\n                introduction={{\r\n                    ...porfolioinfo.herosection,\r\n                    btnactioncallback: handleIntroductionBTNAction\r\n                }}\r\n\r\n                //skill section data\r\n                skills={{ ...porfolioinfo.skilsSections }}\r\n\r\n                //project section data\r\n                projects={porfolioinfo.projects}\r\n                projectOnAction={handleProjectAction}\r\n                projectOnMore={handleProjectMore}\r\n               \r\n                //about me section\r\n                introduceMe={porfolioinfo.introsection}\r\n\r\n                //Contact me\r\n                contactMe={{\r\n                    ...porfolioinfo.contactMe,\r\n                    callback: (formData) => {\r\n                        window.open('https://mail.google.com/mail/?view=cm&fs=1&to=angheloamir@gmail.com&su=Visitor&body=');\r\n                    }\r\n                }}\r\n\r\n                //Footers\r\n                footer={{\r\n                    ...porfolioinfo.footer\r\n                }}\r\n                \r\n            />\r\n            <NavigationBar />\r\n        </React.Fragment>\r\n    );\r\n}\r\n","/**\r\n * \r\n */\r\nimport './layout/project.scss';\r\nimport { ProjectLayoutInterface } from './_lib/ProjectLayoutInterface';\r\nimport { BasicCard, LinedStyled } from '../UIElements';\r\nimport useDimension from '../_app/useWindowDimension';\r\n\r\nexport default function ProjectLayout(props :ProjectLayoutInterface.propsReceive ) {\r\n    const { isMobile } = useDimension();\r\n\r\n    return (\r\n        <div id='projects'>\r\n            <LinedStyled\r\n                text='My Projects'\r\n                isHorizontal={!isMobile}\r\n            />\r\n\r\n            <div id='projectslist'>\r\n                <div className='projects-item'>\r\n                { props.projects.map((project :ProjectLayoutInterface.Cards, index :number) => {\r\n                    return (\r\n                        <div key={index}>\r\n                            <BasicCard\r\n                                image={project.image}\r\n                                title={project.name}\r\n                                text={project.description}\r\n                                btn={project.btntext}\r\n                                tags={project.tags}\r\n                                onpress={() => props.projectOnAction(index, project.name)}\r\n                            />\r\n                        </div>\r\n                    )\r\n                })}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n","/**\r\n    @TYPE\r\n        Controller - A component that handles the functionality\r\n\r\n    @DESCRIPTION\r\n        It also handle the process (what happen when a button is clicked).\r\n\r\n    @VISIBLE\r\n        The user is at home page\r\n\r\n    @NOTICE\r\n        This component return statement should not contain any html tags and text/data.\r\n        only providing the process and data from StateAPI\r\n*/\r\nimport React from 'react';\r\nimport NavigationBar from './shared/NavigationBar';\r\nimport ProjectLayout from '../LayoutViews/ProjectLayout';\r\nimport projectlist from '../_database/projectslist.json';\r\n\r\n\r\nexport default function ProjectScene() {\r\n    const handleProjectAction = (index :number, name :string) => {\r\n        window.open( projectlist.projects[index].link);\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <NavigationBar />\r\n            <ProjectLayout\r\n                projects={ projectlist.projects }\r\n                projectOnAction={handleProjectAction}\r\n            />\r\n        </React.Fragment>\r\n    );\r\n}\r\n","/*\n*/\nimport React from 'react';\n\nimport {\n  contextStore,\n  createDefaultState,\n  RootReducer} from './StateAPI';\n\nimport {\n  HashRouter as Router,\n  Switch,\n  Route,\n} from \"react-router-dom\";\n\n\nimport HomeScene from './AppComponents/HomeScene';\nimport ProjectScene from './AppComponents/ProjectScene';\n\nfunction App() {\n  const [state, dispatch] = React.useReducer(RootReducer, createDefaultState());\n\n  return (\n    <React.Fragment>\n      <contextStore.Provider value={{state, dispatch}}>\n        <Router>\n          <Switch>\n            <Route path=\"/\"         exact component={() => <HomeScene />} />\n            <Route path=\"/projects\" exact component={() => <ProjectScene />} />\n          </Switch>\n        </Router>\n      </contextStore.Provider>\n    </React.Fragment>\n  );\n}\n\nexport default App;\n","/*\r\n    Describe the application main (global) state using the context API\r\n*/\r\nexport interface State {\r\n    /**\r\n     * The text used to determine the current text displayed in the application.\r\n     * @type string\r\n     * @default \"Hello there\"\r\n     */\r\n    text: string; \r\n}\r\n\r\nexport function createDefaultState() :State {\r\n    return {\r\n        text: \"Hello there\",\r\n    }\r\n}\r\n","/*\n    * TYPE\n        Scene - A screen is a component that occupies a large part of the screen\n        Index - A component that does not display itself\n        Fragment of ...\n\n    * DESCRIPTION\n\n    * VISIBLE WHEN\n*/\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}