{"version":3,"sources":["StateAPI/ActionType.ts","StateAPI/RootReducer.ts","StateAPI/index.ts","UIElements/Navbar/Subitem.tsx","UIElements/Navbar/Navbar.tsx","UIElements/SlidingMenu/MenuIcon.tsx","UIElements/SlidingMenu/Drawer.tsx","UIElements/SlidingMenu/SlidingMenu.tsx","UIElements/HeroProfile/ProfileIcon.tsx","UIElements/HeroProfile/TextAnimation.tsx","UIElements/HeroProfile/Text.tsx","UIElements/HeroProfile/HeroProfile.tsx","UIElements/FancyButton/FancyButton.tsx","UIElements/BasicCard/BasicCard.tsx","UIElements/LinedStyled/LinedStyled.tsx","UIElements/GridImageAccordion/GridImageAccordion.tsx","UIElements/HighFive/HighFive.tsx","UIElements/Form/Form.tsx","UIElements/SocialLinks/SocialLinks.tsx","LayoutViews/HomeLayout.tsx","_app/useWindowDimension.tsx","AppComponents/shared/NavigationBar.tsx","AppComponents/HomeScene.tsx","LayoutViews/ProjectLayout.tsx","AppComponents/ProjectScene.tsx","App.tsx","StateAPI/State.ts","index.tsx"],"names":["ActionType","RootReducer","state","action","type","test","alert","console","error","contextStore","React","createContext","Subitem","props","item","subitem","_jsxs","className","children","name","_jsx","map","i","onClick","callback","index","icon","active","disabled","Navbar","id","brandIconPath","src","alt","items","MenuIcon","isCrossed","onMenuIconPress","Drawer","_props$items","isVisible","length","SubItem","cb","n","SlidingMenu","drawerOpen","setDrawerOpen","useState","cross","setCross","ProfileIcon","undefined","imagepath","Fragment","imagesize","style","width","height","TextAnimation","update","useRef","timeToUpdate","makeUpdate","useEffect","setInterval","current","clearInterval","setindex","isOpactity","setOpacity","tags","Text","welcomemsg","_props$text","text","split","generateTagLine","btnaction","btnactioncallback","FancyButton","HeroProfile","_ref","e","stopPropagation","BasicCard","image","title","btn","onpress","secbtn","onpresssec","LinedStyled","isHorizontal","GridImageAccordion","setActive","setActiveFloat","images","image1","image2","image3","image4","texts","text1","text2","text3","text4","whichText","HighFive","currentState","setState","isFadeout","setFadeOut","intro","setTimeout","transistion","aboutme","Form","formData","setData","handleTextChange","newdata","data","value","target","forms","onSubmit","preventDefault","form","onChange","SocialLinks","github","href","FaGithub","size","linkedin","FaLinkedin","facebook","FaFacebookSquare","twitter","FaTwitterSquare","HomeLayout","introduction","skills","projects","project","description","btntext","projectOnAction","projectOnAction2","projectOnMore","introduceMe","contactMe","footer","links","getWindowDimensions","innerWidth","innerHeight","window","isMobile","isTablet","isDesktop","useWindowDimensions","windowDimensions","setWindowDimensions","handleResize","addEventListener","removeEventListener","NavigationBar","useDimension","history","useHistory","navitems","FaHome","location","endsWith","FaReact","handleNavigation","push","position","top","left","HomeScene","porfolioinfo","herosection","handleIntroductionBTNAction","itemname","open","resumeDownload","skilsSections","handleProjectAction","link","handleProjectAction2","link2","handleProjectMore","introsection","JSON","stringify","ProjectLayout","ProjectScene","projectlist","App","dispatch","useReducer","Provider","Router","Switch","Route","path","exact","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.419e9a72.chunk.js","sourcesContent":["/*\n    Defines the available action type\n*/\n\n/**\n * The list of available action that will be use by the RootReducer and Actions functions\n */\nexport enum ActionType {\n    test,\n    \n}\n","/*\n    The root reducer.\n    This function is should only use be used by App.jsx since the App.js set up the context api\n*/\nimport { ActionType } from \"./ActionType\";\nimport { ActionInterface } from \"./Interface\";\nimport { State } from './State';\n\n/**\n * The reducer (Google about Flow design pattern for info). \n * This function is indirectly called by the use of dispatch(ActionInterface)\n*/\nexport function RootReducer(state :State, action :ActionInterface) :State {\n    switch( action.type ) {\n        case ActionType.test:\n            alert(\"Wow! The StateAPI (context api / redux) is WORKING!\");\n            return state;\n\n        default:\n            console.error(\"The Action was not provided in the RootReducer\");\n            return state;\n    }\n}\n","/*\n    Contains all of the state api functionality so there is no need to \n    import each one by one\n*/\nimport React from 'react';\nimport { StateAPI } from './Interface';\nexport type { StateAPI } from './Interface';\nexport { createDefaultState } from './State';\nexport { Action } from './Actions';\n\n//this reducer is called only by the main app\nexport { RootReducer } from './RootReducer';\n\n/**\n * Contains a context (store). Google about Flow Design Pattern for more info.\n */\n//@ts-ignore - ignore the passed null vale since the context store does not have default value\nexport const contextStore = React.createContext<StateAPI>(null);\n","/*\n    A resuable (not app specific component) navbar.\n    The parent element should provide the position: fixed style.                 \n*/\nimport './Navbar.scss';\nimport { NavItem } from '../_lib/NavItem';\n\ninterface propsReceive {\n    item        :NavItem;\n    index       :number;\n    callback    :(index :number, itemname :string) => void;  \n}\n\nexport default function Subitem(props :propsReceive) {\n    if(props.item.subitem) \n        return (\n            <span key={props.index} className='item'>\n            { props.item.name }\n                <div className='dropdown'>\n                    <div className='invisiblebar'></div>\n                    {\n                        props.item.subitem.map((subitem :any, i :number) => {\n                            return (\n                                <div key={i}\n                                    onClick={()=> props.callback(props.index, subitem.name)}\n                                    className='subitem'\n                                >\n                                     <span className='icon'>\n                                        { subitem.icon && subitem.icon() }\n                                    </span>\n                                    <span>\n                                        { subitem.name }\n                                    </span>\n                                </div>\n                            )\n                        })\n                    }\n                </div>\n            </span>\n        );\n    else\n        return (\n            <span key={props.index}\n                className={props.item.active ? 'active' : props.item.disabled ? 'disabled' : 'item'}\n                onClick={() => {\n                    if( !props.item.active && !props.item.disabled )\n                        props.callback(props.index, props.item.name);\n                }}>\n                 <span className='icon'>\n                    { props.item.icon && props.item.icon() }\n                </span>\n                <span>\n                    { props.item.name }\n                </span>\n            </span>\n        );\n}\n","/*\n    A resuable (not app specific component) navbar.\n    The parent element should provide the position: fixed style.\n\n    <Navbar\n        brandIconPath={'./assets/test.png'}\n        items={[\n            {\n                name: 'item1',\n                icon: () => <FaBeer />\n            },\n            {\n                name: 'item2',\n                subitem: [\n                    {\n                        name: 'sub 1',\n                        icon: () => <FaBeer />\n                    },\n                    {\n                        name: 'sub 2',\n                        icon: () => <FaBeer />\n                    }\n                ]\n            }\n        ]}\n        callback={(i :number, name :string) => console.log('you pressed :' + name)}\n    />             \n*/\nimport './Navbar.scss';\nimport { NavigationUIProps, NavItem } from '../_lib/NavItem';\nimport Subitem from './Subitem';\n\n/**\n * The navbar position by default is static.\n * The parent element should provide the positioning such as fixed.\n * \n * @props brandIconPath? :string;\n * @props callback       :(index :number, itemname :string) => void;\n * @props items          :[\n *  name: string, icon? :JSX.Element, active? :boolean, disabled? :boolean;\n *  subitem?: { name :string, icon?: JSX.Element, active? :boolean, disabled? :boolean }\n * ]\n * \n * @example\n * import { FaBeer } from 'react-icons/fa';\n    .....\n        <Navbar\n            items={[\n                {\n                    name: 'item1',\n                    icon: () => <FaBeer />\n                },\n                {\n                    name: 'item2',\n                    subitem: [\n                        {\n                            name: 'sub 1',\n                            icon: () => <FaBeer />,\n                            active: true\n                        },\n                        {\n                            name: 'sub 2',\n                            icon: () => <FaBeer />\n                        }\n                    ]\n                }\n            ]}\n            callback={(i :number, name :string) => console.log('you pressed :' + name)}\n        />\n */\nexport function Navbar(props :NavigationUIProps) {\n    return (\n        <div id='PongDesignNavbar'>\n            { props.brandIconPath && <img className='img' src={props.brandIconPath} alt={props.brandIconPath}/> }\n            <span className='navitemscontainer content-container'>\n            { props.items && props.items.map( (item :NavItem,  index :number) => {\n                return <Subitem\n                    key={index}\n                    item={item}\n                    index={index}\n                    callback={props.callback}\n                />\n            })}\n            </span>\n        </div>\n    );\n}\n","/*\n    Return an hambuger icon thru the use of stylesheet (no vector icon)\n*/\nimport React from 'react';\nimport './MenuIcon.scss';\n\ninterface propsReceive {\n    isCrossed :boolean;\n    onMenuIconPress?: (isCrossed :boolean) => void;\n}\n\nexport default function MenuIcon(props :propsReceive) {\n    function handleIconPressed() {\n        props.onMenuIconPress && props.onMenuIconPress(!props.isCrossed);\n    }\n\n    return (\n        <div id='menuicon' className={props.isCrossed ? 'change' : ''} onClick={handleIconPressed} >\n            <div className=\"bar1 change\"></div>\n            <div className=\"bar2\"></div>\n            <div className=\"bar3\"></div>\n        </div>\n    );\n}\n","/*\n*/\nimport React from 'react';\nimport './Drawer.scss';\n\nimport { NavItem, NavNameAndIcon } from '../_lib/NavItem';\n\ninterface propsReceive {\n    items?      :Array<NavItem>;\n    isVisible   :boolean;\n    callback    :(index :number, itemname :string) => void;   \n}\n\nexport default function Drawer(props :propsReceive) {\n    return (\n        <div id='PongDesignSlidingMenuDrawer' className={props.isVisible ? 'visible' : 'hidden'}>\n            {\n                props.items?.map((item :NavItem, index :number) => {\n                    return (\n                        <div key={index}\n                            className={item.active ? 'active' : item.disabled ? 'disabled' : 'item'}\n                            onClick={() => {\n                                if(item.active || item.disabled)\n                                    return;\n                                if(!item.subitem || item.subitem.length <= 0 )\n                                    props.callback(index, item.name)\n                            }}\n                        >\n                            <span className='icon'>\n                                { item.icon && item.icon() }\n                            </span>\n                            <span>\n                                { item.name }\n                            </span>\n                            <SubItem\n                                item={item}\n                                index={index}\n                                cb={(n :string) =>{\n                                    props.callback(index, n)\n                                }}\n                            />\n                        </div>\n                    )\n                })\n            }\n        </div>\n    );\n}\n\nfunction SubItem( props :{item :NavItem, index :number, cb: (name :string) => void}) {\n    if(!props.item.subitem || props.item.subitem.length <= 0 )\n        return <span></span>\n\n    return (\n        <div className='subitemcontainer'>\n            {props.item.subitem.map((subitem :NavNameAndIcon, index :number) => {\n                return (\n                    <div\n                        key={index}\n                        onClick={() => props.cb(subitem.name)}\n                    >\n                        <span className='icon'>\n                                { subitem.icon && subitem.icon() }\n                            </span>\n                            <span>\n                                { subitem.name }\n                            </span>\n                    </div>\n                );\n            })}\n        </div>\n    );\n}\n","/*\n    Return a navbar with hamburger icon and drawer\n*/\nimport React from 'react';\nimport './SlidingMenu.scss';\n\nimport { NavigationUIProps } from '../_lib/NavItem';\nimport MenuIcon from './MenuIcon';\nimport Drawer from './Drawer';\n\n/**\n * Returns a Sliding Menu (Drawer) which includes a nav bar. The navbar position by default is static.\n * The parent element should provide the positioning such as fixed.\n * \n * @props brandIconPath? :string;\n * @props callback       :(index :number, itemname :string) => void;\n * @props items          :[\n *  name: string, icon? :JSX.Element, active? :boolean, disabled? :boolean;\n *  subitem?: { name :string, icon?: JSX.Element, active? :boolean, disabled? :boolean }\n * ]\n * \n * @example\n * import { FaBeer } from 'react-icons/fa';\n    .....\n        <SlidingMenu\n            items={[\n                {\n                    name: 'item1',\n                    icon: () => <FaBeer />\n                },\n                {\n                    name: 'item2',\n                    subitem: [\n                        {\n                            name: 'sub 1',\n                            icon: () => <FaBeer />,\n                            active: true\n                        },\n                        {\n                            name: 'sub 2',\n                            icon: () => <FaBeer />\n                        }\n                    ]\n                }\n            ]}\n            callback={(i :number, name :string) => console.log('you pressed :' + name)}\n        />\n */\nexport function SlidingMenu(props :NavigationUIProps) {\n    const [drawerOpen, setDrawerOpen] = React.useState(false);\n    const [cross, setCross]           = React.useState(false);\n\n    function handleMenuIconPress(isCrossed :boolean) {\n        setDrawerOpen(isCrossed);\n        setCross(isCrossed);\n    }\n\n    function handleNavItemPressed(index :number, name :string) {\n        setDrawerOpen(!drawerOpen);\n        setCross(false);\n        props.callback(index, name);\n    }\n\n    return (\n        <div id='PongDesignSlidingMenu'>\n            <span className='nav'>\n                <MenuIcon\n                    onMenuIconPress={handleMenuIconPress}\n                    isCrossed={cross}\n                />\n                {\n                    props.brandIconPath &&\n                    <img className='img' src={props.brandIconPath} alt={props.brandIconPath}/>\n                }\n            </span>\n            <div>\n                <Drawer\n                    isVisible={drawerOpen}\n                    items={props.items}\n                    callback={handleNavItemPressed}\n                />\n            </div>\n        </div>\n    );\n}\n","import React from 'react';\nimport './ProfileIcon.scss';\n\ninterface propsReceive {\n    imagepath?       :string;\n    imagesize?       :[string | number, string | number]\n}\n\nexport default function ProfileIcon(props :propsReceive) {\n    if(props.imagepath === undefined || props.imagepath === '')\n        return <React.Fragment></React.Fragment>\n\n    return (\n        <div className='imagecontainer'>\n            { props.imagesize ?\n                <img src={props.imagepath} alt={props.imagepath}\n                    style={{width: props.imagesize[0], height: props.imagesize[1]}}/>\n                :\n                <img src={props.imagepath} alt={props.imagepath} />\n            }\n        </div>\n    )\n}\n","import React from 'react';\nimport './TextAnimation.scss';\n\nexport interface propsReceive {\n    tags :string[];\n}\n\nexport default function TextAnimation(props :propsReceive) {\n    //use for timers\n    const update                     = React.useRef(false);\n    const [timeToUpdate, makeUpdate] = React.useState(false);\n    \n    React.useEffect(()=> {\n        const i = setInterval(() => {\n            update.current = !update.current;\n            makeUpdate(update.current)\n        }, 4000);\n        return () => clearInterval(i);\n    }, []);\n\n    const [index, setindex] = React.useState(-1);\n    const [isOpactity, setOpacity] = React.useState(false);\n\n    React.useEffect(() => {\n        if((index + 1) >= props.tags.length) {\n            setindex( 0 );\n        }\n        else\n            setindex( index + 1);\n        setOpacity( !isOpactity);\n        \n        // eslint-disable-next-line\n    }, [timeToUpdate])\n\n    return (\n        <div id='textslideup-animation'>\n            <div className='addOpacityEffect'>{props.tags[index]}</div>\n        </div>\n    )\n}\n","import './Text.scss';\n\n//import Typewriter from 'typewriter-effect';\nimport { FancyButton } from '..';\n\nimport TextAnimation from './TextAnimation';\nimport React from 'react';\n\nexport interface propsReceive {\n    welcomemsg?     :string;\n    name?           :string;\n    text?           :string;\n    tags?           :string[];\n    btnaction?      :Array<string>;\n    btnactioncallback? :(index :number, itemname :string) => void;\n}\n\nexport default function Text(props :propsReceive) {\n    function generateTagLine() {\n        if(!props.tags) return <React.Fragment></React.Fragment>\n        return (\n            <React.Fragment>\n            { props.text?.split(' ').map((text :string, index :number) => {\n                    if(text === \"[]\")\n                        return (\n                            <span key={index}>\n                                <TextAnimation tags={props.tags ? props.tags : []} />\n                            </span>\n                        );\n                    return text + \" \";\n                })    \n            }\n            </React.Fragment>\n        );\n    }\n\n    return (\n        <div className='text'>\n            <h3>{ props.welcomemsg }</h3>\n\n            <h2>\n                { props.name }\n                { /*<Typewriter\n                    options={{\n                        strings: props.name,\n                        cursor: '',\n                        autoStart: true,\n                        loop: false,\n                        delay: 70,\n                    }}\n                /> */ }\n            </h2>\n\n            <h1 className='tagline'>\n                { generateTagLine() }\n            </h1>\n\n            { props.btnaction && props.btnactioncallback &&\n            <div id='calltoactions'> \n                { props.btnaction[0] && \n                    <FancyButton name={props.btnaction[0]}\n                    //@ts-ignore\n                    callback={() => props.btnactioncallback(0, props.btnaction[0])} />\n                }\n                { props.btnaction[1] &&\n                    <FancyButton name={props.btnaction[1]}\n                    //@ts-ignore\n                    callback={() => props.btnactioncallback(1, props.btnaction[1])} />\n                }\n            </div>\n            }\n        </div>\n    )\n}\n","import './HeroProfile.scss';\nimport { HeroProfileInterface } from  '../_lib/HeroProfile';\n\nimport ProfileIcon from './ProfileIcon';\nimport Text from './Text';\n\n/**\n * Used as the Hero Section\n * @example\n    imagepath?      :string;\n    imagesize?      :[string | number, string | number]\n    welcomemsg?     :string;\n    name?           :string;\n    text?           :string;\n    btnaction?      :Array<string>;\n    btnactioncallback? :(index :number, itemname :string) => void;\n\n    {\n        \"imagepath\":        \"./assets/profile.jpg\",\n        \"welcomemsg\":       \"Hi my name is\",\n        \"name\":             \"Anghelo Amir\",\n        \"text\":             \"\\\"Let's us [] Websites and Apps\\\"\",\n        \"tags\":             [\"Make\", \"Improve\", \"Maintain\"],\n        \"btnaction\":        [\"My Projects\", \"Contact Me\"],\n        \"resumeDownload\":   \"https://angheloamir.github.io/#/projects\"\n    }\n */\nexport function HeroProfile(props :HeroProfileInterface) {   \n    return (\n        <div id='PongDesignDescriptiveCard'>\n            <ProfileIcon\n                {...props}\n            />\n            <Text\n                {...props}\n            />            \n        </div>\n    )\n}\n","import './FancyButton.scss';\n\n/**\n * A button designed with PongDesign theme\n * @example\n * name \t\t:string;\n * callback\t\t:() => void; \n */\nexport function FancyButton( {name, callback } :{name :string, callback :() => void}) {\n\tconst handleClick = (e :any) => {\n\t\te.stopPropagation();\n\t\tcallback();\n\t}\n\t\n\treturn (\n\t\t<button id=\"PongDesignFancyButton\" onClick={ handleClick } >\n\t\t\t<span>{name}</span>\n\t\t</button>\n\t);\n}\n","import './BasicCard.scss';\n\nimport { BasicCardInterface, FancyButton } from '../';\n\n/**\n * Contents of the Basic Card UI Element\n * @example\n * image?   :string;\n    title?   :string;\n    text?    :string;\n    btn?     :string;\n    tags?    :Array<string>;\n    onpress? :() => void;\n */\nexport function BasicCard( props :BasicCardInterface) {\n    return (\n        <div id='PongDesignBasicCard'>\n            { props.image && <img src={props.image} alt={props.image} />}\n            <div className=\"information\">\n                { props.title && <h3>{props.title}</h3> }\n                { props.text  && <p>{props.text}</p> }\n                <div className='tags'>\n                    { props.tags  && props.tags.map((item :string, i :number) => {\n                        return (\n                            <span key={i}>{item}</span>\n                        )\n                    })\n                    }\n                </div>\n            </div>\n            <div className='btn'>\n                { props.btn &&\n                    <FancyButton\n                        name={props.btn}\n                        //@ts-ignore\n                        callback={() => props.onpress()}\n                    />\n                }\n                { props.secbtn &&\n                    <FancyButton\n                        name={props.secbtn}\n                        //@ts-ignore\n                        callback={() => props.onpresssec()}\n                    />\n                }\n            </div>\n        </div>\n    )\n}\n//{ props.btn && <button onClick={props.onpress}>{props.btn}</button> }\n","import './LinedStyled.scss';\n\n/**\n * Draw a horizontal with a text in the middle (or just line or text)\n * @example\n * text?            :string;\n * isHorizontal?    :boolean; (Will render line)\n */\nexport function LinedStyled({text, isHorizontal} :{text? :string, isHorizontal? :boolean}) {\n    return (\n        <div id='LinedStyled'>\n            { isHorizontal && <div className='line'></div> }\n            { text && <h3>{text}</h3> }\n            { isHorizontal && <div className='line'></div> }\n        </div>\n    )\n}\n","import React from 'react';\nimport './GridImageAccordion.scss';\nimport { GIAInterface } from '../';\n\n/**\n * An accordion based on the images. When an images is hovered or clicked, a text will appear on the\n * left side (desktop) or in the bottom (mobile)\n * \n * @example\n * The It must be supplied with four items (images and text)\n * images  :{\n        image1  :string;\n        image2  :string;\n        image3  :string;\n        image4  :string;\n    }\n    texts   :{\n        text1   :{\n            title   :string;\n            text    :string;\n        };\n        text2   :{\n            title   :string;\n            text    :string;\n        }\n        text3   :{\n            title   :string;\n            text    :string;\n        }\n        text4   :{\n            title   :string;\n            text    :string;\n        }\n    }\n */\nexport function GridImageAccordion(props :GIAInterface) {\n    const [active, setActive] = React.useState(0);\n\n    function setActiveFloat(i :number) {\n        setActive(i);\n    }\n\n    function whichText() {\n        switch(active) {\n            case 0:\n                return (\n                    <div className=\"text-container opacity\"  >\n                        <h3>{ props.texts.text1.title }</h3>\n                        <p> { props.texts.text1.text }</p>\n                    </div>\n                );\n            case 1:\n                return (\n                    <div className=\"text-container opacity1\"  >\n                        <h3>{ props.texts.text2.title }</h3>\n                        <p> { props.texts.text2.text }</p>\n                    </div>\n                );\n            case 2:\n                return (\n                    <div className=\"text-container opacity2\"  >\n                        <h3>{ props.texts.text3.title }</h3>\n                        <p> { props.texts.text3.text }</p>\n                    </div>\n                );\n            case 3:\n                return (\n                    <div className=\"text-container opacity3\"  >\n                        <h3>{ props.texts.text4.title }</h3>\n                        <p> { props.texts.text4.text }</p>\n                    </div>\n                );\n            default:\n                return (\n                    <div></div>\n                )\n        }\n    }\n\n    return (\n        <div id='GridImageAccordion'>\n            <div className='images-container'>\n                <img\n                    src={props.images.image1}\n                    className={active === 0 ? 'activeanim' : ''}\n                    onClick={() => setActiveFloat(0)}\n                    alt=' icon'\n                />\n                <img\n                    src={props.images.image2}\n                    className={active === 1 ? 'activeanim' : ''}\n                    onClick={() => setActiveFloat(1)}\n                    alt=' icon'\n                />\n                <img \n                    src={props.images.image3}\n                    className={active === 2 ? 'activeanim' : ''}\n                    onClick={() => setActiveFloat(2)}\n                    alt=' icon'\n                />\n                <img \n                    src={props.images.image4}\n                    className={active === 3 ? 'activeanim' : ''}\n                    onClick={() => setActiveFloat(3)}\n                    alt=' icon'\n                />\n            </div>\n            { whichText() }\n        </div>\n    )\n}\n","import { HighFiveInterface } from \"..\";\nimport './HighFive.scss';\n\nimport React from 'react';\n\nexport function HighFive( props :HighFiveInterface) {\n    const [currentState, setState] = React.useState(0);\n    const [isFadeout, setFadeOut] = React.useState(false);\n\n    return (\n        <div id=\"highfive\">\n        { currentState === 0 &&\n            <div className={`slide1 ${isFadeout ? \"fadeout-anim\" : \" \"}`}>\n                <div className=\"image-state\">\n                    <img src={props.intro.image} alt={props.intro.image}\n                        onClick={() => {\n                            setFadeOut(true);\n                            setTimeout(() => setState(1), 1000);\n                            setTimeout(() => setState(2), 4000);\n                        }}\n                    />\n                </div>\n                <div className=\"text-state\">\n                    <h1>{props.intro.text}</h1>\n                </div>\n            </div>\n        }\n\n        { currentState === 1 &&\n            <div className=\"slide1 transmission-state\">\n                <div className=\"text-state\">\n                    <h1>{props.transistion.text}</h1>\n                </div>\n            </div>\n        }\n\n        { currentState === 2 &&\n            <div className=\"aboutme\">\n                <div className=\"text-state\">\n                    <p>{props.aboutme.text}</p>\n                </div>\n                <div className=\"aboutme-image\">\n                    <img src={props.aboutme.image} alt={props.intro.image}\n                        \n                    />\n                </div>\n                \n            </div>\n        }\n\n        </div>\n    )\n}\n","import './form.module.scss';\nimport '../FancyButton/FancyButton.scss';\nimport { FormInterface } from '../';\nimport React from 'react';\n\n/**\n * A resuable form\n * \n * @example\n * <Form \n        forms={[\n            {\n                name: 'input 1',\n                type: 'text'\n            }\n        ]}\n        callback={(data) => alert(JSON.stringify(data))}\n * />\n */\nexport function Form(props :FormInterface) {\n    const [formData, setData] = React.useState([{}]);\n\n    React.useEffect(() => {\n        const forms = props.forms.map(data => {\n            return { name: data.name, value: '' }\n        });\n        setData(forms);\n    }, [props.forms]);\n\n    function handleSubmit( e :React.SyntheticEvent ) {\n        e.preventDefault();\n        props.callback(formData);\n    }\n\n    function handleTextChange(e :React.ChangeEvent<HTMLTextAreaElement | HTMLInputElement>, index :number) {\n        const newdata = formData.map((data :any, i :number) => {\n            if(i === index)\n                return { name: data.name, value :e.target.value }\n            return data;\n        });\n        setData(newdata);\n    }\n\n    return (\n        <form onSubmit={handleSubmit}>\n            { props.forms.map((form :{name :string, type: string}, index :number) => {\n                return (\n                    <div>\n                        <label>{form.name}</label>\n                        { form.type === 'text' ?\n                            <textarea\n                                onChange={(e) => handleTextChange(e, index)}\n                            />\n                            :\n                            <input type={form.type}\n                                onChange={(e) => handleTextChange(e, index)}\n                            />\n                        }\n                    </div>\n                )\n            })}\n            <button type=\"submit\" id=\"PongDesignFancyButton\">Submit</button>\n        </form>\n    );\n}\n","import './SocialLinks.scss';\nimport { SocialLinksInterface } from '..';\n\nimport { FaFacebookSquare, FaTwitterSquare, FaGithub, FaLinkedin} from 'react-icons/fa'\n\nexport function SocialLinks(props :SocialLinksInterface) {\n    const size = 52;\n\n    return (\n        <div id='SocialLinks'>\n            { props.github &&\n                <a href={props.github}>\n                    <FaGithub\n                        size={size}\n                    />\n                </a>\n            }\n            { props.linkedin &&\n                <a href={props.linkedin}>\n                    <FaLinkedin\n                        size={size}\n                    />\n                </a>\n            }\n            { props.facebook &&\n                <a href={props.facebook}>\n                    <FaFacebookSquare\n                        size={48}\n                    />\n                </a>\n            }\n            { props.twitter &&\n                <a href={props.twitter}>\n                    <FaTwitterSquare\n                        size={size}\n                    />\n                </a>\n            }\n        </div>\n    )\n}\n","/**\n    @TYPE\n        Layout - A layout \n\n    @DESCRIPTION\n        Handle and renders appearance of the home page\n\n    @VISIBLE\n        The user is at home page\n*/\nimport './layout/home.scss';\n//import useDimension from '../_app/useWindowDimension';\nimport { HomeLayoutInterface } from './_lib/HomeLayoutInterface';\nimport {\n    HeroProfile,\n    GridImageAccordion,\n    //Carousel,\n    //Columns,\n    BasicCard,\n    FancyButton,\n    HighFive,\n    //LinedStyled,\n    //ModalBox\n    Form,\n    SocialLinks\n} from '../UIElements';\n\nexport default function HomeLayout( props :HomeLayoutInterface.propsReceive ) {\n    //const { isMobile } = useDimension();\n\n    return ( \n    <div id='Home'>\n        <section id='hero'>\n            <div className='content-container'>\n                <HeroProfile {...props.introduction} />\n            </div>\n        </section>\n\n        <section id='skills'>\n            <div className='content-container'>\n                <h1 className='skills-title'>What can I <span>DO?</span></h1>\n                <GridImageAccordion { ...props.skills }/>\n            </div>\n        </section>\n        \n        <section id='projects'>\n            <div className='content-container'>\n                <h1 className='projects-title'><span>PROJECTS</span> that I Create</h1>\n                <div className='items'>\n                    { props.projects.map((project :any, index :number) => {\n                        return(\n                            <div className='item'>\n                                <BasicCard\n                                    image={project.image}\n                                    title={project.name}\n                                    text={project.description}\n                                    btn={project.btntext}\n                                    secbtn={project.secbtn}\n                                    tags={project.tags}\n                                    onpress={()    => props.projectOnAction(index, project.name)}\n                                    onpresssec={() => props.projectOnAction2(index, project.name)}\n                                />\n                            </div>\n                        )\n                    })}\n                </div>\n                <div className=\"btn-more\">\n                    <FancyButton\n                        name='See more of my projects'\n                        callback={props.projectOnMore}\n                    />\n                </div>\n            </div>\n        </section>\n\n        <section id='HighFive'>\n            <div className='content-container'>\n                <h1 className='title'>Nice to <span>MEET</span> you!</h1>\n                <HighFive\n                    { ...props.introduceMe }\n                />\n            </div>\n        </section>\n\n        <section id='ContactForm'>\n            <div className='content-container'>\n                <h1 className='title'>\n                    Is am <span>INTERESTING?</span>\n                    <br />\n                    <span> Contact Me! </span>\n                </h1>\n                <Form\n                    { ...props.contactMe }\n                />\n            </div>  \n        </section>\n\n        <footer>\n            <div className='content'>\n                <div className='links'>\n                    <SocialLinks\n                        {...props.footer.links}\n                    />\n                </div>\n                <p>{props.footer.text}</p>\n            </div>\n        </footer>\n        \n    </div> \n    );\n}\n\n/*\n <p style={{width: '50px', margin: 'auto', paddingTop: '5rem'}}>\n        Lorem ipsum dolor sit amet consectetur adipisicing elit. A\n    </p>\n\n        <ModalBox\n            isVisible={props.isModalVisible}\n            onClose={props.onModalClose}\n            onCloseText='Close'\n            title={props.reachme.title}\n            content={\n            () => {\n            return (\n                <div id='ModalBoxContents'>\n                    { props.reachme.items.map((item :HomeLayoutInterface.ReachMeItems, index :number) => {\n                    return (\n                        <div className='items' key={index}>\n                            { item.link ?\n                                <a href={item.link}>{item.name}</a>\n                                :\n                                <h4>{item.name}</h4>\n                            }\n                            { item.text && <p>{item.text}</p> }\n                            { item.note && <p className='note'>{item.note}</p> }\n                        </div>\n                    )})}\n                </div>\n            )}}\n        />\n*/","import { useState, useEffect } from 'react';\n\nfunction getWindowDimensions() {\n  const { innerWidth: width, innerHeight: height } = window;\n\n  return {\n    width,\n    height,\n    isMobile:   width >= 578 ? false : true,\n    isTablet:   width >= 756 ? false : true,\n    isDesktop:  width >= 981 ? true  : false\n  };\n}\n\n/**\n * A hooks that return the current screen dimension\n * @returns \n *  width     :number,\n    height    :number,\n    isMobile  :boolean\n    isDesktop :boolean\n */\nexport default function useWindowDimensions() {\n  const [windowDimensions, setWindowDimensions] = useState(getWindowDimensions());\n\n  useEffect(() => {\n    function handleResize() {\n      setWindowDimensions(getWindowDimensions());\n    }\n\n    window.addEventListener('resize', handleResize);\n    return () => window.removeEventListener('resize', handleResize);\n  }, []);\n\n  return windowDimensions;\n}\n","/**\n * \n */\nimport { useHistory } from 'react-router-dom';\nimport { FaHome, FaReact } from 'react-icons/fa';\n//import { MdContactPage } from 'react-icons/md';\nimport { Navbar, SlidingMenu } from '../../UIElements';\nimport useDimension from '../../_app/useWindowDimension';\n\nexport default function NavigationBar() {\n    const { isMobile } = useDimension();\n    const history = useHistory();\n    \n    const navitems = [\n        {\n            name: ' Home',\n            icon: () => <FaHome />,\n            active: window.location.href.endsWith('/')\n        },\n        {\n            name: ' Projects',\n            icon: () => <FaReact />,\n            active: window.location.href.endsWith('/projects')\n        },\n        /*\n        {\n            name: ' Contacts',\n            icon: () => <MdContactPage />,\n        },\n        */\n    ];\n\n    const handleNavigation = (i :number, name :string) => {\n        if(i === 0) history.push('/');\n        if(i === 1) history.push('/projects');\n    }\n\n    return (\n        <div style={{\n            height:     '2.5em',\n            position:   'fixed',\n            top:         0,\n            left:        0,\n            width:      '100vw'\n        }}>\n            { !isMobile ?\n                <Navbar\n                    brandIconPath={''}\n                    items={navitems}\n                    callback={handleNavigation}\n                />\n                :\n                <SlidingMenu\n                    items={navitems}\n                    callback={handleNavigation}\n                />\n            }\n        </div>\n    )\n}\n","/**\n    @TYPE\n        Controller - A component that handles the functionality\n\n    @DESCRIPTION\n        It also handle the process (what happen when a button is clicked).\n\n    @VISIBLE\n        The user is at home page\n\n    @NOTICE\n        This component return statement should not contain any html tags and text/data.\n        only providing the process and data from StateAPI\n*/\nimport React from 'react';\nimport { useHistory } from 'react-router-dom';\nimport HomeLayout from '../LayoutViews/HomeLayout';\nimport porfolioinfo from '../_database/portfolio.json';\nimport NavigationBar from './shared/NavigationBar';\n\n\nexport default function HomeScene() {\n    const history = useHistory();\n    //const [modalVisible, setModalVisible] = React.useState(false);\n\n    const handleIntroductionBTNAction = (i :number, itemname :string) => {\n        if(i === 0) {\n            window.open(porfolioinfo.herosection.resumeDownload);\n        }\n        //if(i === 1)\n        //    setModalVisible(true);\n    }\n\n    const handleProjectAction = (index :number, name :string) => {\n        window.open( porfolioinfo.projects[index].link);\n    }\n\n    const handleProjectAction2 = (index :number, name :string) => {\n        window.open( porfolioinfo.projects[index].link2 );\n    }\n\n    const handleProjectMore = () => {\n        history.push('/projects');\n    }\n\n    //const handleModalClose = () => {\n    //    setModalVisible(false);\n    //}\n\n    return (\n        <React.Fragment>\n            <HomeLayout\n                //Hero section data\n                introduction={{\n                    ...porfolioinfo.herosection,\n                    btnactioncallback: handleIntroductionBTNAction\n                }}\n\n                //skill section data\n                skills={{ ...porfolioinfo.skilsSections }}\n\n                //project section data\n                projects={porfolioinfo.projects}\n                projectOnAction={handleProjectAction}\n                projectOnAction2={handleProjectAction2}\n                projectOnMore={handleProjectMore}\n               \n                //about me section\n                introduceMe={porfolioinfo.introsection}\n\n                //Contact me\n                contactMe={{\n                    ...porfolioinfo.contactMe,\n                    callback: (formData) => alert( JSON.stringify(formData))\n                }}\n\n                //Footers\n                footer={{\n                    ...porfolioinfo.footer\n                }}\n                \n            />\n            <NavigationBar />\n        </React.Fragment>\n    );\n}\n\n //window.open('https://mail.google.com/mail/?view=cm&fs=1&to=angheloamir@gmail.com&su=Visitor&body=' + text);\n ","/**\n * \n */\nimport './layout/project.scss';\nimport { ProjectLayoutInterface } from './_lib/ProjectLayoutInterface';\nimport { BasicCard, LinedStyled } from '../UIElements';\nimport useDimension from '../_app/useWindowDimension';\n\nexport default function ProjectLayout(props :ProjectLayoutInterface.propsReceive ) {\n    const { isMobile } = useDimension();\n\n    return (\n        <div id='projects'>\n            <LinedStyled\n                text='My Projects'\n                isHorizontal={!isMobile}\n            />\n\n            <div id='projectslist'>\n                <div className='projects-item'>\n                { props.projects.map((project :ProjectLayoutInterface.Cards, index :number) => {\n                    return (\n                        <div key={index}>\n                            <BasicCard\n                                image={project.image}\n                                title={project.name}\n                                text={project.description}\n                                btn={project.btntext}\n                                tags={project.tags}\n                                onpress={() => props.projectOnAction(index, project.name)}\n                                secbtn={project.secbtn}\n                                onpresssec={() => props.projectOnAction2(index, project.name)}\n                            />\n                        </div>\n                    )\n                })}\n                </div>\n            </div>\n        </div>\n    );\n}\n","/**\n    @TYPE\n        Controller - A component that handles the functionality\n\n    @DESCRIPTION\n        It also handle the process (what happen when a button is clicked).\n\n    @VISIBLE\n        The user is at home page\n\n    @NOTICE\n        This component return statement should not contain any html tags and text/data.\n        only providing the process and data from StateAPI\n*/\nimport React from 'react';\nimport NavigationBar from './shared/NavigationBar';\nimport ProjectLayout from '../LayoutViews/ProjectLayout';\nimport projectlist from '../_database/projectslist.json';\n\n\nexport default function ProjectScene() {\n    const handleProjectAction = (index :number, name :string) => {\n        window.open( projectlist.projects[index].link);\n    }\n\n    const handleProjectAction2 = (index :number, name :string) => {\n        window.open( projectlist.projects[index].link2 );\n    }\n\n    return (\n        <React.Fragment>\n            <NavigationBar />\n            <ProjectLayout\n                //@ts-ignore\n                projects={ projectlist.projects }\n                projectOnAction={handleProjectAction}\n                projectOnAction2={handleProjectAction2}\n            />\n        </React.Fragment>\n    );\n}\n","/*\n*/\nimport React from 'react';\n\nimport {\n  contextStore,\n  createDefaultState,\n  RootReducer} from './StateAPI';\n\nimport {\n  HashRouter as Router,\n  Switch,\n  Route,\n} from \"react-router-dom\";\n\n\nimport HomeScene from './AppComponents/HomeScene';\nimport ProjectScene from './AppComponents/ProjectScene';\n\nfunction App() {\n  const [state, dispatch] = React.useReducer(RootReducer, createDefaultState());\n\n  return (\n    <React.Fragment>\n      <contextStore.Provider value={{state, dispatch}}>\n        <Router>\n          <Switch>\n            <Route path=\"/\"         exact component={() => <HomeScene />} />\n            <Route path=\"/projects\" exact component={() => <ProjectScene />} />\n          </Switch>\n        </Router>\n      </contextStore.Provider>\n    </React.Fragment>\n  );\n}\n\nexport default App;\n","/*\n    Describe the application main (global) state using the context API\n*/\nexport interface State {\n    /**\n     * The text used to determine the current text displayed in the application.\n     * @type string\n     * @default \"Hello there\"\n     */\n    text: string; \n}\n\nexport function createDefaultState() :State {\n    return {\n        text: \"Hello there\",\n    }\n}\n","/*\n    * TYPE\n        Scene - A screen is a component that occupies a large part of the screen\n        Index - A component that does not display itself\n        Fragment of ...\n\n    * DESCRIPTION\n\n    * VISIBLE WHEN\n\n\n        Built an AI-powered web application that helps\nusers improve English fluency and communication\nskills through practical, interactive conversations.\n*/\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}